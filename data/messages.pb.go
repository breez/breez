// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.15.8
// source: messages.proto

package data

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SwapError int32

const (
	SwapError_NO_ERROR                SwapError = 0
	SwapError_FUNDS_EXCEED_LIMIT      SwapError = 1
	SwapError_TX_TOO_SMALL            SwapError = 2
	SwapError_INVOICE_AMOUNT_MISMATCH SwapError = 3
	SwapError_SWAP_EXPIRED            SwapError = 4
)

// Enum value maps for SwapError.
var (
	SwapError_name = map[int32]string{
		0: "NO_ERROR",
		1: "FUNDS_EXCEED_LIMIT",
		2: "TX_TOO_SMALL",
		3: "INVOICE_AMOUNT_MISMATCH",
		4: "SWAP_EXPIRED",
	}
	SwapError_value = map[string]int32{
		"NO_ERROR":                0,
		"FUNDS_EXCEED_LIMIT":      1,
		"TX_TOO_SMALL":            2,
		"INVOICE_AMOUNT_MISMATCH": 3,
		"SWAP_EXPIRED":            4,
	}
)

func (x SwapError) Enum() *SwapError {
	p := new(SwapError)
	*p = x
	return p
}

func (x SwapError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SwapError) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (SwapError) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x SwapError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SwapError.Descriptor instead.
func (SwapError) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type Account_AccountStatus int32

const (
	Account_DISCONNECTED          Account_AccountStatus = 0
	Account_PROCESSING_CONNECTION Account_AccountStatus = 1
	Account_CLOSING_CONNECTION    Account_AccountStatus = 2
	Account_CONNECTED             Account_AccountStatus = 3
)

// Enum value maps for Account_AccountStatus.
var (
	Account_AccountStatus_name = map[int32]string{
		0: "DISCONNECTED",
		1: "PROCESSING_CONNECTION",
		2: "CLOSING_CONNECTION",
		3: "CONNECTED",
	}
	Account_AccountStatus_value = map[string]int32{
		"DISCONNECTED":          0,
		"PROCESSING_CONNECTION": 1,
		"CLOSING_CONNECTION":    2,
		"CONNECTED":             3,
	}
)

func (x Account_AccountStatus) Enum() *Account_AccountStatus {
	p := new(Account_AccountStatus)
	*p = x
	return p
}

func (x Account_AccountStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Account_AccountStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[1].Descriptor()
}

func (Account_AccountStatus) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[1]
}

func (x Account_AccountStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Account_AccountStatus.Descriptor instead.
func (Account_AccountStatus) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7, 0}
}

type Payment_PaymentType int32

const (
	Payment_DEPOSIT        Payment_PaymentType = 0
	Payment_WITHDRAWAL     Payment_PaymentType = 1
	Payment_SENT           Payment_PaymentType = 2
	Payment_RECEIVED       Payment_PaymentType = 3
	Payment_CLOSED_CHANNEL Payment_PaymentType = 4
)

// Enum value maps for Payment_PaymentType.
var (
	Payment_PaymentType_name = map[int32]string{
		0: "DEPOSIT",
		1: "WITHDRAWAL",
		2: "SENT",
		3: "RECEIVED",
		4: "CLOSED_CHANNEL",
	}
	Payment_PaymentType_value = map[string]int32{
		"DEPOSIT":        0,
		"WITHDRAWAL":     1,
		"SENT":           2,
		"RECEIVED":       3,
		"CLOSED_CHANNEL": 4,
	}
)

func (x Payment_PaymentType) Enum() *Payment_PaymentType {
	p := new(Payment_PaymentType)
	*p = x
	return p
}

func (x Payment_PaymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Payment_PaymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[2].Descriptor()
}

func (Payment_PaymentType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[2]
}

func (x Payment_PaymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Payment_PaymentType.Descriptor instead.
func (Payment_PaymentType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8, 0}
}

type NotificationEvent_NotificationType int32

const (
	NotificationEvent_READY                        NotificationEvent_NotificationType = 0
	NotificationEvent_INITIALIZATION_FAILED        NotificationEvent_NotificationType = 1
	NotificationEvent_ACCOUNT_CHANGED              NotificationEvent_NotificationType = 2
	NotificationEvent_PAYMENT_SENT                 NotificationEvent_NotificationType = 3
	NotificationEvent_INVOICE_PAID                 NotificationEvent_NotificationType = 4
	NotificationEvent_LIGHTNING_SERVICE_DOWN       NotificationEvent_NotificationType = 5
	NotificationEvent_FUND_ADDRESS_CREATED         NotificationEvent_NotificationType = 6
	NotificationEvent_FUND_ADDRESS_UNSPENT_CHANGED NotificationEvent_NotificationType = 7
	NotificationEvent_BACKUP_SUCCESS               NotificationEvent_NotificationType = 8
	NotificationEvent_BACKUP_FAILED                NotificationEvent_NotificationType = 9
	NotificationEvent_BACKUP_AUTH_FAILED           NotificationEvent_NotificationType = 10
	NotificationEvent_BACKUP_NODE_CONFLICT         NotificationEvent_NotificationType = 11
	NotificationEvent_BACKUP_REQUEST               NotificationEvent_NotificationType = 12
	NotificationEvent_PAYMENT_FAILED               NotificationEvent_NotificationType = 13
	NotificationEvent_PAYMENT_SUCCEEDED            NotificationEvent_NotificationType = 14
	NotificationEvent_REVERSE_SWAP_CLAIM_STARTED   NotificationEvent_NotificationType = 15
	NotificationEvent_REVERSE_SWAP_CLAIM_SUCCEEDED NotificationEvent_NotificationType = 16
	NotificationEvent_REVERSE_SWAP_CLAIM_FAILED    NotificationEvent_NotificationType = 17
	NotificationEvent_REVERSE_SWAP_CLAIM_CONFIRMED NotificationEvent_NotificationType = 18
	NotificationEvent_LSP_CHANNEL_OPENED           NotificationEvent_NotificationType = 19
	NotificationEvent_BACKUP_NOT_LATEST_CONFLICT   NotificationEvent_NotificationType = 20
)

// Enum value maps for NotificationEvent_NotificationType.
var (
	NotificationEvent_NotificationType_name = map[int32]string{
		0:  "READY",
		1:  "INITIALIZATION_FAILED",
		2:  "ACCOUNT_CHANGED",
		3:  "PAYMENT_SENT",
		4:  "INVOICE_PAID",
		5:  "LIGHTNING_SERVICE_DOWN",
		6:  "FUND_ADDRESS_CREATED",
		7:  "FUND_ADDRESS_UNSPENT_CHANGED",
		8:  "BACKUP_SUCCESS",
		9:  "BACKUP_FAILED",
		10: "BACKUP_AUTH_FAILED",
		11: "BACKUP_NODE_CONFLICT",
		12: "BACKUP_REQUEST",
		13: "PAYMENT_FAILED",
		14: "PAYMENT_SUCCEEDED",
		15: "REVERSE_SWAP_CLAIM_STARTED",
		16: "REVERSE_SWAP_CLAIM_SUCCEEDED",
		17: "REVERSE_SWAP_CLAIM_FAILED",
		18: "REVERSE_SWAP_CLAIM_CONFIRMED",
		19: "LSP_CHANNEL_OPENED",
		20: "BACKUP_NOT_LATEST_CONFLICT",
	}
	NotificationEvent_NotificationType_value = map[string]int32{
		"READY":                        0,
		"INITIALIZATION_FAILED":        1,
		"ACCOUNT_CHANGED":              2,
		"PAYMENT_SENT":                 3,
		"INVOICE_PAID":                 4,
		"LIGHTNING_SERVICE_DOWN":       5,
		"FUND_ADDRESS_CREATED":         6,
		"FUND_ADDRESS_UNSPENT_CHANGED": 7,
		"BACKUP_SUCCESS":               8,
		"BACKUP_FAILED":                9,
		"BACKUP_AUTH_FAILED":           10,
		"BACKUP_NODE_CONFLICT":         11,
		"BACKUP_REQUEST":               12,
		"PAYMENT_FAILED":               13,
		"PAYMENT_SUCCEEDED":            14,
		"REVERSE_SWAP_CLAIM_STARTED":   15,
		"REVERSE_SWAP_CLAIM_SUCCEEDED": 16,
		"REVERSE_SWAP_CLAIM_FAILED":    17,
		"REVERSE_SWAP_CLAIM_CONFIRMED": 18,
		"LSP_CHANNEL_OPENED":           19,
		"BACKUP_NOT_LATEST_CONFLICT":   20,
	}
)

func (x NotificationEvent_NotificationType) Enum() *NotificationEvent_NotificationType {
	p := new(NotificationEvent_NotificationType)
	*p = x
	return p
}

func (x NotificationEvent_NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationEvent_NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[3].Descriptor()
}

func (NotificationEvent_NotificationType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[3]
}

func (x NotificationEvent_NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationEvent_NotificationType.Descriptor instead.
func (NotificationEvent_NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{21, 0}
}

type ListPaymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPaymentsRequest) Reset() {
	*x = ListPaymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPaymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaymentsRequest) ProtoMessage() {}

func (x *ListPaymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaymentsRequest.ProtoReflect.Descriptor instead.
func (*ListPaymentsRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type RestartDaemonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestartDaemonRequest) Reset() {
	*x = RestartDaemonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartDaemonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartDaemonRequest) ProtoMessage() {}

func (x *RestartDaemonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartDaemonRequest.ProtoReflect.Descriptor instead.
func (*RestartDaemonRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

type RestartDaemonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestartDaemonReply) Reset() {
	*x = RestartDaemonReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartDaemonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartDaemonReply) ProtoMessage() {}

func (x *RestartDaemonReply) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartDaemonReply.ProtoReflect.Descriptor instead.
func (*RestartDaemonReply) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

type AddFundInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationToken string            `protobuf:"bytes,1,opt,name=notificationToken,proto3" json:"notificationToken,omitempty"`
	LspID             string            `protobuf:"bytes,2,opt,name=lspID,proto3" json:"lspID,omitempty"`
	OpeningFeeParams  *OpeningFeeParams `protobuf:"bytes,3,opt,name=opening_fee_params,json=openingFeeParams,proto3" json:"opening_fee_params,omitempty"`
}

func (x *AddFundInitRequest) Reset() {
	*x = AddFundInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFundInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFundInitRequest) ProtoMessage() {}

func (x *AddFundInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFundInitRequest.ProtoReflect.Descriptor instead.
func (*AddFundInitRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *AddFundInitRequest) GetNotificationToken() string {
	if x != nil {
		return x.NotificationToken
	}
	return ""
}

func (x *AddFundInitRequest) GetLspID() string {
	if x != nil {
		return x.LspID
	}
	return ""
}

func (x *AddFundInitRequest) GetOpeningFeeParams() *OpeningFeeParams {
	if x != nil {
		return x.OpeningFeeParams
	}
	return nil
}

type FundStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationToken string `protobuf:"bytes,1,opt,name=notificationToken,proto3" json:"notificationToken,omitempty"`
}

func (x *FundStatusRequest) Reset() {
	*x = FundStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundStatusRequest) ProtoMessage() {}

func (x *FundStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundStatusRequest.ProtoReflect.Descriptor instead.
func (*FundStatusRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *FundStatusRequest) GetNotificationToken() string {
	if x != nil {
		return x.NotificationToken
	}
	return ""
}

type AddInvoiceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentRequest string `protobuf:"bytes,1,opt,name=paymentRequest,proto3" json:"paymentRequest,omitempty"`
	LspFee         int64  `protobuf:"varint,2,opt,name=lsp_fee,json=lspFee,proto3" json:"lsp_fee,omitempty"`
}

func (x *AddInvoiceReply) Reset() {
	*x = AddInvoiceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInvoiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInvoiceReply) ProtoMessage() {}

func (x *AddInvoiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInvoiceReply.ProtoReflect.Descriptor instead.
func (*AddInvoiceReply) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *AddInvoiceReply) GetPaymentRequest() string {
	if x != nil {
		return x.PaymentRequest
	}
	return ""
}

func (x *AddInvoiceReply) GetLspFee() int64 {
	if x != nil {
		return x.LspFee
	}
	return 0
}

type ChainStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight   uint32 `protobuf:"varint,1,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	SyncedToChain bool   `protobuf:"varint,2,opt,name=syncedToChain,proto3" json:"syncedToChain,omitempty"`
}

func (x *ChainStatus) Reset() {
	*x = ChainStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainStatus) ProtoMessage() {}

func (x *ChainStatus) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainStatus.ProtoReflect.Descriptor instead.
func (*ChainStatus) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *ChainStatus) GetBlockHeight() uint32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *ChainStatus) GetSyncedToChain() bool {
	if x != nil {
		return x.SyncedToChain
	}
	return false
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Balance       int64                 `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	WalletBalance int64                 `protobuf:"varint,3,opt,name=walletBalance,proto3" json:"walletBalance,omitempty"`
	Status        Account_AccountStatus `protobuf:"varint,4,opt,name=status,proto3,enum=data.Account_AccountStatus" json:"status,omitempty"`
	// maximum payment this node can receive via lightning
	MaxAllowedToReceive int64 `protobuf:"varint,5,opt,name=maxAllowedToReceive,proto3" json:"maxAllowedToReceive,omitempty"`
	// maximum payment this node can pay via lightning
	MaxAllowedToPay int64 `protobuf:"varint,6,opt,name=maxAllowedToPay,proto3" json:"maxAllowedToPay,omitempty"`
	// The lightning absolute payment amount
	MaxPaymentAmount int64 `protobuf:"varint,7,opt,name=maxPaymentAmount,proto3" json:"maxPaymentAmount,omitempty"`
	// The routing node fee as reflected in the node policy
	RoutingNodeFee int64 `protobuf:"varint,8,opt,name=routingNodeFee,proto3" json:"routingNodeFee,omitempty"`
	// the state of the account, if not enabled then no automatic
	// attempt to open a channel with breez node will be made.
	Enabled bool `protobuf:"varint,9,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// maximum chan reserve accross all channels of this account.
	MaxChanReserve int64 `protobuf:"varint,10,opt,name=maxChanReserve,proto3" json:"maxChanReserve,omitempty"`
	// The funding transaction id of the channel.
	ChannelPoint string `protobuf:"bytes,11,opt,name=channelPoint,proto3" json:"channelPoint,omitempty"`
	// reflects if this account can receive/send payments.
	ReadyForPayments bool `protobuf:"varint,12,opt,name=readyForPayments,proto3" json:"readyForPayments,omitempty"`
	// the last known block height.
	TipHeight int64 `protobuf:"varint,13,opt,name=tipHeight,proto3" json:"tipHeight,omitempty"`
	// public keys of peers this account is connected to.
	ConnectedPeers []string `protobuf:"bytes,14,rep,name=connectedPeers,proto3" json:"connectedPeers,omitempty"`
	// The max amount this node can receive without opening a new channel
	MaxInboundLiquidity int64    `protobuf:"varint,15,opt,name=max_inbound_liquidity,json=maxInboundLiquidity,proto3" json:"max_inbound_liquidity,omitempty"`
	UnconfirmedChannels []string `protobuf:"bytes,16,rep,name=unconfirmed_channels,json=unconfirmedChannels,proto3" json:"unconfirmed_channels,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Account) GetWalletBalance() int64 {
	if x != nil {
		return x.WalletBalance
	}
	return 0
}

func (x *Account) GetStatus() Account_AccountStatus {
	if x != nil {
		return x.Status
	}
	return Account_DISCONNECTED
}

func (x *Account) GetMaxAllowedToReceive() int64 {
	if x != nil {
		return x.MaxAllowedToReceive
	}
	return 0
}

func (x *Account) GetMaxAllowedToPay() int64 {
	if x != nil {
		return x.MaxAllowedToPay
	}
	return 0
}

func (x *Account) GetMaxPaymentAmount() int64 {
	if x != nil {
		return x.MaxPaymentAmount
	}
	return 0
}

func (x *Account) GetRoutingNodeFee() int64 {
	if x != nil {
		return x.RoutingNodeFee
	}
	return 0
}

func (x *Account) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Account) GetMaxChanReserve() int64 {
	if x != nil {
		return x.MaxChanReserve
	}
	return 0
}

func (x *Account) GetChannelPoint() string {
	if x != nil {
		return x.ChannelPoint
	}
	return ""
}

func (x *Account) GetReadyForPayments() bool {
	if x != nil {
		return x.ReadyForPayments
	}
	return false
}

func (x *Account) GetTipHeight() int64 {
	if x != nil {
		return x.TipHeight
	}
	return 0
}

func (x *Account) GetConnectedPeers() []string {
	if x != nil {
		return x.ConnectedPeers
	}
	return nil
}

func (x *Account) GetMaxInboundLiquidity() int64 {
	if x != nil {
		return x.MaxInboundLiquidity
	}
	return 0
}

func (x *Account) GetUnconfirmedChannels() []string {
	if x != nil {
		return x.UnconfirmedChannels
	}
	return nil
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                       Payment_PaymentType `protobuf:"varint,1,opt,name=type,proto3,enum=data.Payment_PaymentType" json:"type,omitempty"`
	Amount                     int64               `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	CreationTimestamp          int64               `protobuf:"varint,4,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	InvoiceMemo                *InvoiceMemo        `protobuf:"bytes,6,opt,name=invoiceMemo,proto3" json:"invoiceMemo,omitempty"`
	RedeemTxID                 string              `protobuf:"bytes,7,opt,name=redeemTxID,proto3" json:"redeemTxID,omitempty"`
	PaymentHash                string              `protobuf:"bytes,8,opt,name=paymentHash,proto3" json:"paymentHash,omitempty"`
	Destination                string              `protobuf:"bytes,9,opt,name=destination,proto3" json:"destination,omitempty"`
	PendingExpirationHeight    uint32              `protobuf:"varint,10,opt,name=PendingExpirationHeight,proto3" json:"PendingExpirationHeight,omitempty"`
	PendingExpirationTimestamp int64               `protobuf:"varint,11,opt,name=PendingExpirationTimestamp,proto3" json:"PendingExpirationTimestamp,omitempty"`
	Fee                        int64               `protobuf:"varint,12,opt,name=fee,proto3" json:"fee,omitempty"`
	Preimage                   string              `protobuf:"bytes,13,opt,name=preimage,proto3" json:"preimage,omitempty"`
	ClosedChannelPoint         string              `protobuf:"bytes,14,opt,name=closedChannelPoint,proto3" json:"closedChannelPoint,omitempty"`
	IsChannelPending           bool                `protobuf:"varint,15,opt,name=isChannelPending,proto3" json:"isChannelPending,omitempty"`
	IsChannelCloseConfimed     bool                `protobuf:"varint,16,opt,name=isChannelCloseConfimed,proto3" json:"isChannelCloseConfimed,omitempty"`
	ClosedChannelTxID          string              `protobuf:"bytes,17,opt,name=closedChannelTxID,proto3" json:"closedChannelTxID,omitempty"`
	IsKeySend                  bool                `protobuf:"varint,18,opt,name=isKeySend,proto3" json:"isKeySend,omitempty"`
	PendingFull                bool                `protobuf:"varint,19,opt,name=PendingFull,proto3" json:"PendingFull,omitempty"`
	ClosedChannelRemoteTxID    string              `protobuf:"bytes,20,opt,name=closedChannelRemoteTxID,proto3" json:"closedChannelRemoteTxID,omitempty"`
	ClosedChannelSweepTxID     string              `protobuf:"bytes,21,opt,name=closedChannelSweepTxID,proto3" json:"closedChannelSweepTxID,omitempty"`
	GroupKey                   string              `protobuf:"bytes,22,opt,name=groupKey,proto3" json:"groupKey,omitempty"`
	GroupName                  string              `protobuf:"bytes,23,opt,name=groupName,proto3" json:"groupName,omitempty"`
	LnurlPayInfo               *LNUrlPayInfo       `protobuf:"bytes,24,opt,name=lnurlPayInfo,proto3" json:"lnurlPayInfo,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *Payment) GetType() Payment_PaymentType {
	if x != nil {
		return x.Type
	}
	return Payment_DEPOSIT
}

func (x *Payment) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Payment) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

func (x *Payment) GetInvoiceMemo() *InvoiceMemo {
	if x != nil {
		return x.InvoiceMemo
	}
	return nil
}

func (x *Payment) GetRedeemTxID() string {
	if x != nil {
		return x.RedeemTxID
	}
	return ""
}

func (x *Payment) GetPaymentHash() string {
	if x != nil {
		return x.PaymentHash
	}
	return ""
}

func (x *Payment) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *Payment) GetPendingExpirationHeight() uint32 {
	if x != nil {
		return x.PendingExpirationHeight
	}
	return 0
}

func (x *Payment) GetPendingExpirationTimestamp() int64 {
	if x != nil {
		return x.PendingExpirationTimestamp
	}
	return 0
}

func (x *Payment) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *Payment) GetPreimage() string {
	if x != nil {
		return x.Preimage
	}
	return ""
}

func (x *Payment) GetClosedChannelPoint() string {
	if x != nil {
		return x.ClosedChannelPoint
	}
	return ""
}

func (x *Payment) GetIsChannelPending() bool {
	if x != nil {
		return x.IsChannelPending
	}
	return false
}

func (x *Payment) GetIsChannelCloseConfimed() bool {
	if x != nil {
		return x.IsChannelCloseConfimed
	}
	return false
}

func (x *Payment) GetClosedChannelTxID() string {
	if x != nil {
		return x.ClosedChannelTxID
	}
	return ""
}

func (x *Payment) GetIsKeySend() bool {
	if x != nil {
		return x.IsKeySend
	}
	return false
}

func (x *Payment) GetPendingFull() bool {
	if x != nil {
		return x.PendingFull
	}
	return false
}

func (x *Payment) GetClosedChannelRemoteTxID() string {
	if x != nil {
		return x.ClosedChannelRemoteTxID
	}
	return ""
}

func (x *Payment) GetClosedChannelSweepTxID() string {
	if x != nil {
		return x.ClosedChannelSweepTxID
	}
	return ""
}

func (x *Payment) GetGroupKey() string {
	if x != nil {
		return x.GroupKey
	}
	return ""
}

func (x *Payment) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Payment) GetLnurlPayInfo() *LNUrlPayInfo {
	if x != nil {
		return x.LnurlPayInfo
	}
	return nil
}

type PaymentsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentsList []*Payment `protobuf:"bytes,1,rep,name=paymentsList,proto3" json:"paymentsList,omitempty"`
}

func (x *PaymentsList) Reset() {
	*x = PaymentsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentsList) ProtoMessage() {}

func (x *PaymentsList) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentsList.ProtoReflect.Descriptor instead.
func (*PaymentsList) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *PaymentsList) GetPaymentsList() []*Payment {
	if x != nil {
		return x.PaymentsList
	}
	return nil
}

type PaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentError string `protobuf:"bytes,1,opt,name=paymentError,proto3" json:"paymentError,omitempty"`
	TraceReport  string `protobuf:"bytes,2,opt,name=traceReport,proto3" json:"traceReport,omitempty"`
}

func (x *PaymentResponse) Reset() {
	*x = PaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentResponse) ProtoMessage() {}

func (x *PaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentResponse.ProtoReflect.Descriptor instead.
func (*PaymentResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *PaymentResponse) GetPaymentError() string {
	if x != nil {
		return x.PaymentError
	}
	return ""
}

func (x *PaymentResponse) GetTraceReport() string {
	if x != nil {
		return x.TraceReport
	}
	return ""
}

type SendWalletCoinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	SatPerByteFee int64  `protobuf:"varint,2,opt,name=satPerByteFee,proto3" json:"satPerByteFee,omitempty"`
}

func (x *SendWalletCoinsRequest) Reset() {
	*x = SendWalletCoinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendWalletCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendWalletCoinsRequest) ProtoMessage() {}

func (x *SendWalletCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendWalletCoinsRequest.ProtoReflect.Descriptor instead.
func (*SendWalletCoinsRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

func (x *SendWalletCoinsRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SendWalletCoinsRequest) GetSatPerByteFee() int64 {
	if x != nil {
		return x.SatPerByteFee
	}
	return 0
}

type PayInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount         int64  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	PaymentRequest string `protobuf:"bytes,2,opt,name=paymentRequest,proto3" json:"paymentRequest,omitempty"`
	Fee            int64  `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *PayInvoiceRequest) Reset() {
	*x = PayInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayInvoiceRequest) ProtoMessage() {}

func (x *PayInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayInvoiceRequest.ProtoReflect.Descriptor instead.
func (*PayInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *PayInvoiceRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PayInvoiceRequest) GetPaymentRequest() string {
	if x != nil {
		return x.PaymentRequest
	}
	return ""
}

func (x *PayInvoiceRequest) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type SpontaneousPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount       int64            `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	DestNode     string           `protobuf:"bytes,2,opt,name=destNode,proto3" json:"destNode,omitempty"`
	Description  string           `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	GroupKey     string           `protobuf:"bytes,4,opt,name=groupKey,proto3" json:"groupKey,omitempty"`
	GroupName    string           `protobuf:"bytes,5,opt,name=groupName,proto3" json:"groupName,omitempty"`
	FeeLimitMsat int64            `protobuf:"varint,6,opt,name=feeLimitMsat,proto3" json:"feeLimitMsat,omitempty"`
	Tlv          map[int64]string `protobuf:"bytes,7,rep,name=tlv,proto3" json:"tlv,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SpontaneousPaymentRequest) Reset() {
	*x = SpontaneousPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpontaneousPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpontaneousPaymentRequest) ProtoMessage() {}

func (x *SpontaneousPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpontaneousPaymentRequest.ProtoReflect.Descriptor instead.
func (*SpontaneousPaymentRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (x *SpontaneousPaymentRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SpontaneousPaymentRequest) GetDestNode() string {
	if x != nil {
		return x.DestNode
	}
	return ""
}

func (x *SpontaneousPaymentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SpontaneousPaymentRequest) GetGroupKey() string {
	if x != nil {
		return x.GroupKey
	}
	return ""
}

func (x *SpontaneousPaymentRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *SpontaneousPaymentRequest) GetFeeLimitMsat() int64 {
	if x != nil {
		return x.FeeLimitMsat
	}
	return 0
}

func (x *SpontaneousPaymentRequest) GetTlv() map[int64]string {
	if x != nil {
		return x.Tlv
	}
	return nil
}

type InvoiceMemo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description     string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Amount          int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	PayeeName       string `protobuf:"bytes,3,opt,name=payeeName,proto3" json:"payeeName,omitempty"`
	PayeeImageURL   string `protobuf:"bytes,4,opt,name=payeeImageURL,proto3" json:"payeeImageURL,omitempty"`
	PayerName       string `protobuf:"bytes,5,opt,name=payerName,proto3" json:"payerName,omitempty"`
	PayerImageURL   string `protobuf:"bytes,6,opt,name=payerImageURL,proto3" json:"payerImageURL,omitempty"`
	TransferRequest bool   `protobuf:"varint,7,opt,name=transferRequest,proto3" json:"transferRequest,omitempty"`
	Expiry          int64  `protobuf:"varint,8,opt,name=expiry,proto3" json:"expiry,omitempty"`
	Preimage        []byte `protobuf:"bytes,9,opt,name=preimage,proto3" json:"preimage,omitempty"`
}

func (x *InvoiceMemo) Reset() {
	*x = InvoiceMemo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceMemo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceMemo) ProtoMessage() {}

func (x *InvoiceMemo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceMemo.ProtoReflect.Descriptor instead.
func (*InvoiceMemo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *InvoiceMemo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InvoiceMemo) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *InvoiceMemo) GetPayeeName() string {
	if x != nil {
		return x.PayeeName
	}
	return ""
}

func (x *InvoiceMemo) GetPayeeImageURL() string {
	if x != nil {
		return x.PayeeImageURL
	}
	return ""
}

func (x *InvoiceMemo) GetPayerName() string {
	if x != nil {
		return x.PayerName
	}
	return ""
}

func (x *InvoiceMemo) GetPayerImageURL() string {
	if x != nil {
		return x.PayerImageURL
	}
	return ""
}

func (x *InvoiceMemo) GetTransferRequest() bool {
	if x != nil {
		return x.TransferRequest
	}
	return false
}

func (x *InvoiceMemo) GetExpiry() int64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

func (x *InvoiceMemo) GetPreimage() []byte {
	if x != nil {
		return x.Preimage
	}
	return nil
}

type AddInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceDetails   *InvoiceMemo      `protobuf:"bytes,1,opt,name=invoiceDetails,proto3" json:"invoiceDetails,omitempty"`
	LspInfo          *LSPInformation   `protobuf:"bytes,2,opt,name=lspInfo,proto3" json:"lspInfo,omitempty"`
	OpeningFeeParams *OpeningFeeParams `protobuf:"bytes,3,opt,name=opening_fee_params,json=openingFeeParams,proto3" json:"opening_fee_params,omitempty"`
}

func (x *AddInvoiceRequest) Reset() {
	*x = AddInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInvoiceRequest) ProtoMessage() {}

func (x *AddInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInvoiceRequest.ProtoReflect.Descriptor instead.
func (*AddInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *AddInvoiceRequest) GetInvoiceDetails() *InvoiceMemo {
	if x != nil {
		return x.InvoiceDetails
	}
	return nil
}

func (x *AddInvoiceRequest) GetLspInfo() *LSPInformation {
	if x != nil {
		return x.LspInfo
	}
	return nil
}

func (x *AddInvoiceRequest) GetOpeningFeeParams() *OpeningFeeParams {
	if x != nil {
		return x.OpeningFeeParams
	}
	return nil
}

type Invoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memo    *InvoiceMemo `protobuf:"bytes,1,opt,name=memo,proto3" json:"memo,omitempty"`
	Settled bool         `protobuf:"varint,2,opt,name=settled,proto3" json:"settled,omitempty"`
	AmtPaid int64        `protobuf:"varint,3,opt,name=amtPaid,proto3" json:"amtPaid,omitempty"`
}

func (x *Invoice) Reset() {
	*x = Invoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice) ProtoMessage() {}

func (x *Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoice.ProtoReflect.Descriptor instead.
func (*Invoice) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *Invoice) GetMemo() *InvoiceMemo {
	if x != nil {
		return x.Memo
	}
	return nil
}

func (x *Invoice) GetSettled() bool {
	if x != nil {
		return x.Settled
	}
	return false
}

func (x *Invoice) GetAmtPaid() int64 {
	if x != nil {
		return x.AmtPaid
	}
	return 0
}

type CheckLSPClosedChannelMismatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LspInfo   *LSPInformation `protobuf:"bytes,1,opt,name=lspInfo,proto3" json:"lspInfo,omitempty"`
	ChanPoint string          `protobuf:"bytes,2,opt,name=chanPoint,proto3" json:"chanPoint,omitempty"`
}

func (x *CheckLSPClosedChannelMismatchRequest) Reset() {
	*x = CheckLSPClosedChannelMismatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLSPClosedChannelMismatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLSPClosedChannelMismatchRequest) ProtoMessage() {}

func (x *CheckLSPClosedChannelMismatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLSPClosedChannelMismatchRequest.ProtoReflect.Descriptor instead.
func (*CheckLSPClosedChannelMismatchRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{17}
}

func (x *CheckLSPClosedChannelMismatchRequest) GetLspInfo() *LSPInformation {
	if x != nil {
		return x.LspInfo
	}
	return nil
}

func (x *CheckLSPClosedChannelMismatchRequest) GetChanPoint() string {
	if x != nil {
		return x.ChanPoint
	}
	return ""
}

type CheckLSPClosedChannelMismatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mismatch bool `protobuf:"varint,1,opt,name=mismatch,proto3" json:"mismatch,omitempty"`
}

func (x *CheckLSPClosedChannelMismatchResponse) Reset() {
	*x = CheckLSPClosedChannelMismatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLSPClosedChannelMismatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLSPClosedChannelMismatchResponse) ProtoMessage() {}

func (x *CheckLSPClosedChannelMismatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLSPClosedChannelMismatchResponse.ProtoReflect.Descriptor instead.
func (*CheckLSPClosedChannelMismatchResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{18}
}

func (x *CheckLSPClosedChannelMismatchResponse) GetMismatch() bool {
	if x != nil {
		return x.Mismatch
	}
	return false
}

type ResetClosedChannelChainInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChanPoint   string `protobuf:"bytes,1,opt,name=chanPoint,proto3" json:"chanPoint,omitempty"`
	BlockHeight int64  `protobuf:"varint,2,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
}

func (x *ResetClosedChannelChainInfoRequest) Reset() {
	*x = ResetClosedChannelChainInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetClosedChannelChainInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetClosedChannelChainInfoRequest) ProtoMessage() {}

func (x *ResetClosedChannelChainInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetClosedChannelChainInfoRequest.ProtoReflect.Descriptor instead.
func (*ResetClosedChannelChainInfoRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{19}
}

func (x *ResetClosedChannelChainInfoRequest) GetChanPoint() string {
	if x != nil {
		return x.ChanPoint
	}
	return ""
}

func (x *ResetClosedChannelChainInfoRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type ResetClosedChannelChainInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetClosedChannelChainInfoReply) Reset() {
	*x = ResetClosedChannelChainInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetClosedChannelChainInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetClosedChannelChainInfoReply) ProtoMessage() {}

func (x *ResetClosedChannelChainInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetClosedChannelChainInfoReply.ProtoReflect.Descriptor instead.
func (*ResetClosedChannelChainInfoReply) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{20}
}

type NotificationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type NotificationEvent_NotificationType `protobuf:"varint,1,opt,name=type,proto3,enum=data.NotificationEvent_NotificationType" json:"type,omitempty"`
	Data []string                           `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *NotificationEvent) Reset() {
	*x = NotificationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationEvent) ProtoMessage() {}

func (x *NotificationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationEvent.ProtoReflect.Descriptor instead.
func (*NotificationEvent) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{21}
}

func (x *NotificationEvent) GetType() NotificationEvent_NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationEvent_READY
}

func (x *NotificationEvent) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddFundInitReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address           string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	MaxAllowedDeposit int64  `protobuf:"varint,2,opt,name=maxAllowedDeposit,proto3" json:"maxAllowedDeposit,omitempty"`
	ErrorMessage      string `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	BackupJson        string `protobuf:"bytes,4,opt,name=backupJson,proto3" json:"backupJson,omitempty"`
	RequiredReserve   int64  `protobuf:"varint,5,opt,name=requiredReserve,proto3" json:"requiredReserve,omitempty"`
	MinAllowedDeposit int64  `protobuf:"varint,6,opt,name=minAllowedDeposit,proto3" json:"minAllowedDeposit,omitempty"`
}

func (x *AddFundInitReply) Reset() {
	*x = AddFundInitReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFundInitReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFundInitReply) ProtoMessage() {}

func (x *AddFundInitReply) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFundInitReply.ProtoReflect.Descriptor instead.
func (*AddFundInitReply) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{22}
}

func (x *AddFundInitReply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddFundInitReply) GetMaxAllowedDeposit() int64 {
	if x != nil {
		return x.MaxAllowedDeposit
	}
	return 0
}

func (x *AddFundInitReply) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *AddFundInitReply) GetBackupJson() string {
	if x != nil {
		return x.BackupJson
	}
	return ""
}

func (x *AddFundInitReply) GetRequiredReserve() int64 {
	if x != nil {
		return x.RequiredReserve
	}
	return 0
}

func (x *AddFundInitReply) GetMinAllowedDeposit() int64 {
	if x != nil {
		return x.MinAllowedDeposit
	}
	return 0
}

type AddFundReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string `protobuf:"bytes,1,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *AddFundReply) Reset() {
	*x = AddFundReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFundReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFundReply) ProtoMessage() {}

func (x *AddFundReply) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFundReply.ProtoReflect.Descriptor instead.
func (*AddFundReply) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{23}
}

func (x *AddFundReply) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RefundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address       string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	RefundAddress string `protobuf:"bytes,2,opt,name=refundAddress,proto3" json:"refundAddress,omitempty"`
	TargetConf    int32  `protobuf:"varint,3,opt,name=target_conf,json=targetConf,proto3" json:"target_conf,omitempty"`
	SatPerByte    int64  `protobuf:"varint,4,opt,name=sat_per_byte,json=satPerByte,proto3" json:"sat_per_byte,omitempty"`
}

func (x *RefundRequest) Reset() {
	*x = RefundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundRequest) ProtoMessage() {}

func (x *RefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundRequest.ProtoReflect.Descriptor instead.
func (*RefundRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{24}
}

func (x *RefundRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RefundRequest) GetRefundAddress() string {
	if x != nil {
		return x.RefundAddress
	}
	return ""
}

func (x *RefundRequest) GetTargetConf() int32 {
	if x != nil {
		return x.TargetConf
	}
	return 0
}

func (x *RefundRequest) GetSatPerByte() int64 {
	if x != nil {
		return x.SatPerByte
	}
	return 0
}

type AddFundError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwapAddressInfo *SwapAddressInfo `protobuf:"bytes,1,opt,name=swapAddressInfo,proto3" json:"swapAddressInfo,omitempty"`
	HoursToUnlock   float32          `protobuf:"fixed32,2,opt,name=hoursToUnlock,proto3" json:"hoursToUnlock,omitempty"`
}

func (x *AddFundError) Reset() {
	*x = AddFundError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFundError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFundError) ProtoMessage() {}

func (x *AddFundError) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFundError.ProtoReflect.Descriptor instead.
func (*AddFundError) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{25}
}

func (x *AddFundError) GetSwapAddressInfo() *SwapAddressInfo {
	if x != nil {
		return x.SwapAddressInfo
	}
	return nil
}

func (x *AddFundError) GetHoursToUnlock() float32 {
	if x != nil {
		return x.HoursToUnlock
	}
	return 0
}

type FundStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnConfirmedAddresses []*SwapAddressInfo `protobuf:"bytes,1,rep,name=unConfirmedAddresses,proto3" json:"unConfirmedAddresses,omitempty"`
	ConfirmedAddresses   []*SwapAddressInfo `protobuf:"bytes,2,rep,name=confirmedAddresses,proto3" json:"confirmedAddresses,omitempty"`
	RefundableAddresses  []*SwapAddressInfo `protobuf:"bytes,3,rep,name=refundableAddresses,proto3" json:"refundableAddresses,omitempty"`
}

func (x *FundStatusReply) Reset() {
	*x = FundStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundStatusReply) ProtoMessage() {}

func (x *FundStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundStatusReply.ProtoReflect.Descriptor instead.
func (*FundStatusReply) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{26}
}

func (x *FundStatusReply) GetUnConfirmedAddresses() []*SwapAddressInfo {
	if x != nil {
		return x.UnConfirmedAddresses
	}
	return nil
}

func (x *FundStatusReply) GetConfirmedAddresses() []*SwapAddressInfo {
	if x != nil {
		return x.ConfirmedAddresses
	}
	return nil
}

func (x *FundStatusReply) GetRefundableAddresses() []*SwapAddressInfo {
	if x != nil {
		return x.RefundableAddresses
	}
	return nil
}

type RemoveFundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount  int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *RemoveFundRequest) Reset() {
	*x = RemoveFundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFundRequest) ProtoMessage() {}

func (x *RemoveFundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFundRequest.ProtoReflect.Descriptor instead.
func (*RemoveFundRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{27}
}

func (x *RemoveFundRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RemoveFundRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type RemoveFundReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid         string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *RemoveFundReply) Reset() {
	*x = RemoveFundReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFundReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFundReply) ProtoMessage() {}

func (x *RemoveFundReply) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFundReply.ProtoReflect.Descriptor instead.
func (*RemoveFundReply) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{28}
}

func (x *RemoveFundReply) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *RemoveFundReply) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type SwapAddressInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address                 string    `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PaymentHash             string    `protobuf:"bytes,2,opt,name=PaymentHash,proto3" json:"PaymentHash,omitempty"`
	ConfirmedAmount         int64     `protobuf:"varint,3,opt,name=ConfirmedAmount,proto3" json:"ConfirmedAmount,omitempty"`
	ConfirmedTransactionIds []string  `protobuf:"bytes,4,rep,name=ConfirmedTransactionIds,proto3" json:"ConfirmedTransactionIds,omitempty"`
	PaidAmount              int64     `protobuf:"varint,5,opt,name=PaidAmount,proto3" json:"PaidAmount,omitempty"`
	LockHeight              uint32    `protobuf:"varint,6,opt,name=lockHeight,proto3" json:"lockHeight,omitempty"`
	ErrorMessage            string    `protobuf:"bytes,7,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	LastRefundTxID          string    `protobuf:"bytes,8,opt,name=lastRefundTxID,proto3" json:"lastRefundTxID,omitempty"`
	SwapError               SwapError `protobuf:"varint,9,opt,name=swapError,proto3,enum=data.SwapError" json:"swapError,omitempty"`
	FundingTxID             string    `protobuf:"bytes,10,opt,name=FundingTxID,proto3" json:"FundingTxID,omitempty"`
	HoursToUnlock           float32   `protobuf:"fixed32,11,opt,name=hoursToUnlock,proto3" json:"hoursToUnlock,omitempty"`
	NonBlocking             bool      `protobuf:"varint,12,opt,name=nonBlocking,proto3" json:"nonBlocking,omitempty"`
}

func (x *SwapAddressInfo) Reset() {
	*x = SwapAddressInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapAddressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapAddressInfo) ProtoMessage() {}

func (x *SwapAddressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapAddressInfo.ProtoReflect.Descriptor instead.
func (*SwapAddressInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{29}
}

func (x *SwapAddressInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SwapAddressInfo) GetPaymentHash() string {
	if x != nil {
		return x.PaymentHash
	}
	return ""
}

func (x *SwapAddressInfo) GetConfirmedAmount() int64 {
	if x != nil {
		return x.ConfirmedAmount
	}
	return 0
}

func (x *SwapAddressInfo) GetConfirmedTransactionIds() []string {
	if x != nil {
		return x.ConfirmedTransactionIds
	}
	return nil
}

func (x *SwapAddressInfo) GetPaidAmount() int64 {
	if x != nil {
		return x.PaidAmount
	}
	return 0
}

func (x *SwapAddressInfo) GetLockHeight() uint32 {
	if x != nil {
		return x.LockHeight
	}
	return 0
}

func (x *SwapAddressInfo) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SwapAddressInfo) GetLastRefundTxID() string {
	if x != nil {
		return x.LastRefundTxID
	}
	return ""
}

func (x *SwapAddressInfo) GetSwapError() SwapError {
	if x != nil {
		return x.SwapError
	}
	return SwapError_NO_ERROR
}

func (x *SwapAddressInfo) GetFundingTxID() string {
	if x != nil {
		return x.FundingTxID
	}
	return ""
}

func (x *SwapAddressInfo) GetHoursToUnlock() float32 {
	if x != nil {
		return x.HoursToUnlock
	}
	return 0
}

func (x *SwapAddressInfo) GetNonBlocking() bool {
	if x != nil {
		return x.NonBlocking
	}
	return false
}

type SwapAddressList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []*SwapAddressInfo `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *SwapAddressList) Reset() {
	*x = SwapAddressList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapAddressList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapAddressList) ProtoMessage() {}

func (x *SwapAddressList) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapAddressList.ProtoReflect.Descriptor instead.
func (*SwapAddressList) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{30}
}

func (x *SwapAddressList) GetAddresses() []*SwapAddressInfo {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type CreateRatchetSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret       string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	RemotePubKey string `protobuf:"bytes,2,opt,name=remotePubKey,proto3" json:"remotePubKey,omitempty"`
	SessionID    string `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Expiry       uint64 `protobuf:"varint,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
}

func (x *CreateRatchetSessionRequest) Reset() {
	*x = CreateRatchetSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRatchetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRatchetSessionRequest) ProtoMessage() {}

func (x *CreateRatchetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRatchetSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateRatchetSessionRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{31}
}

func (x *CreateRatchetSessionRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *CreateRatchetSessionRequest) GetRemotePubKey() string {
	if x != nil {
		return x.RemotePubKey
	}
	return ""
}

func (x *CreateRatchetSessionRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *CreateRatchetSessionRequest) GetExpiry() uint64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

type CreateRatchetSessionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Secret    string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	PubKey    string `protobuf:"bytes,3,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
}

func (x *CreateRatchetSessionReply) Reset() {
	*x = CreateRatchetSessionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRatchetSessionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRatchetSessionReply) ProtoMessage() {}

func (x *CreateRatchetSessionReply) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRatchetSessionReply.ProtoReflect.Descriptor instead.
func (*CreateRatchetSessionReply) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{32}
}

func (x *CreateRatchetSessionReply) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *CreateRatchetSessionReply) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *CreateRatchetSessionReply) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

type RatchetSessionInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Initiated bool   `protobuf:"varint,2,opt,name=initiated,proto3" json:"initiated,omitempty"`
	UserInfo  string `protobuf:"bytes,3,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
}

func (x *RatchetSessionInfoReply) Reset() {
	*x = RatchetSessionInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatchetSessionInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatchetSessionInfoReply) ProtoMessage() {}

func (x *RatchetSessionInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatchetSessionInfoReply.ProtoReflect.Descriptor instead.
func (*RatchetSessionInfoReply) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{33}
}

func (x *RatchetSessionInfoReply) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *RatchetSessionInfoReply) GetInitiated() bool {
	if x != nil {
		return x.Initiated
	}
	return false
}

func (x *RatchetSessionInfoReply) GetUserInfo() string {
	if x != nil {
		return x.UserInfo
	}
	return ""
}

type RatchetSessionSetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	UserInfo  string `protobuf:"bytes,2,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
}

func (x *RatchetSessionSetInfoRequest) Reset() {
	*x = RatchetSessionSetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatchetSessionSetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatchetSessionSetInfoRequest) ProtoMessage() {}

func (x *RatchetSessionSetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatchetSessionSetInfoRequest.ProtoReflect.Descriptor instead.
func (*RatchetSessionSetInfoRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{34}
}

func (x *RatchetSessionSetInfoRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *RatchetSessionSetInfoRequest) GetUserInfo() string {
	if x != nil {
		return x.UserInfo
	}
	return ""
}

type RatchetEncryptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RatchetEncryptRequest) Reset() {
	*x = RatchetEncryptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatchetEncryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatchetEncryptRequest) ProtoMessage() {}

func (x *RatchetEncryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatchetEncryptRequest.ProtoReflect.Descriptor instead.
func (*RatchetEncryptRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{35}
}

func (x *RatchetEncryptRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *RatchetEncryptRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RatchetDecryptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID        string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	EncryptedMessage string `protobuf:"bytes,2,opt,name=encryptedMessage,proto3" json:"encryptedMessage,omitempty"`
}

func (x *RatchetDecryptRequest) Reset() {
	*x = RatchetDecryptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatchetDecryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatchetDecryptRequest) ProtoMessage() {}

func (x *RatchetDecryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatchetDecryptRequest.ProtoReflect.Descriptor instead.
func (*RatchetDecryptRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{36}
}

func (x *RatchetDecryptRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *RatchetDecryptRequest) GetEncryptedMessage() string {
	if x != nil {
		return x.EncryptedMessage
	}
	return ""
}

type BootstrapFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkingDir string   `protobuf:"bytes,1,opt,name=WorkingDir,proto3" json:"WorkingDir,omitempty"`
	FullPaths  []string `protobuf:"bytes,2,rep,name=FullPaths,proto3" json:"FullPaths,omitempty"`
}

func (x *BootstrapFilesRequest) Reset() {
	*x = BootstrapFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BootstrapFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootstrapFilesRequest) ProtoMessage() {}

func (x *BootstrapFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootstrapFilesRequest.ProtoReflect.Descriptor instead.
func (*BootstrapFilesRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{37}
}

func (x *BootstrapFilesRequest) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *BootstrapFilesRequest) GetFullPaths() []string {
	if x != nil {
		return x.FullPaths
	}
	return nil
}

type Peers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDefault bool     `protobuf:"varint,1,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	Peer      []string `protobuf:"bytes,2,rep,name=peer,proto3" json:"peer,omitempty"`
}

func (x *Peers) Reset() {
	*x = Peers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peers) ProtoMessage() {}

func (x *Peers) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peers.ProtoReflect.Descriptor instead.
func (*Peers) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{38}
}

func (x *Peers) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *Peers) GetPeer() []string {
	if x != nil {
		return x.Peer
	}
	return nil
}

type TxSpentURL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL       string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	IsDefault bool   `protobuf:"varint,2,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	Disabled  bool   `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *TxSpentURL) Reset() {
	*x = TxSpentURL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxSpentURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxSpentURL) ProtoMessage() {}

func (x *TxSpentURL) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxSpentURL.ProtoReflect.Descriptor instead.
func (*TxSpentURL) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{39}
}

func (x *TxSpentURL) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *TxSpentURL) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *TxSpentURL) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type Rate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin  string  `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Rate) Reset() {
	*x = Rate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rate) ProtoMessage() {}

func (x *Rate) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rate.ProtoReflect.Descriptor instead.
func (*Rate) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{40}
}

func (x *Rate) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *Rate) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Rates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rates []*Rate `protobuf:"bytes,1,rep,name=rates,proto3" json:"rates,omitempty"`
}

func (x *Rates) Reset() {
	*x = Rates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rates) ProtoMessage() {}

func (x *Rates) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rates.ProtoReflect.Descriptor instead.
func (*Rates) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{41}
}

func (x *Rates) GetRates() []*Rate {
	if x != nil {
		return x.Rates
	}
	return nil
}

type LSPInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / The id of lsp
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// / The name of of lsp
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	WidgetUrl string `protobuf:"bytes,3,opt,name=widget_url,json=widgetUrl,proto3" json:"widget_url,omitempty"`
	// / The identity pubkey of the Lightning node
	Pubkey string `protobuf:"bytes,4,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// / The network location of the lightning node, e.g. `12.34.56.78:9012` or
	// / `localhost:10011`
	Host string `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	// / The channel capacity in satoshis
	ChannelCapacity int64 `protobuf:"varint,6,opt,name=channel_capacity,json=channelCapacity,proto3" json:"channel_capacity,omitempty"`
	// / The target number of blocks that the funding transaction should be
	// / confirmed by.
	TargetConf int32 `protobuf:"varint,7,opt,name=target_conf,json=targetConf,proto3" json:"target_conf,omitempty"`
	// / The base fee charged regardless of the number of milli-satoshis sent.
	BaseFeeMsat int64 `protobuf:"varint,8,opt,name=base_fee_msat,json=baseFeeMsat,proto3" json:"base_fee_msat,omitempty"`
	// / The effective fee rate in milli-satoshis. The precision of this value goes
	// / up to 6 decimal places, so 1e-6.
	FeeRate float64 `protobuf:"fixed64,9,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	// / The required timelock delta for HTLCs forwarded over the channel.
	TimeLockDelta uint32 `protobuf:"varint,10,opt,name=time_lock_delta,json=timeLockDelta,proto3" json:"time_lock_delta,omitempty"`
	// / The minimum value in millisatoshi we will require for incoming HTLCs on
	// / the channel.
	MinHtlcMsat int64 `protobuf:"varint,11,opt,name=min_htlc_msat,json=minHtlcMsat,proto3" json:"min_htlc_msat,omitempty"`
	// Deprecated: Do not use.
	ChannelFeePermyriad int64  `protobuf:"varint,12,opt,name=channel_fee_permyriad,json=channelFeePermyriad,proto3" json:"channel_fee_permyriad,omitempty"`
	LspPubkey           []byte `protobuf:"bytes,13,opt,name=lsp_pubkey,json=lspPubkey,proto3" json:"lsp_pubkey,omitempty"`
	// The channel can be closed if not used this duration in seconds.
	//
	// Deprecated: Do not use.
	MaxInactiveDuration int64 `protobuf:"varint,14,opt,name=max_inactive_duration,json=maxInactiveDuration,proto3" json:"max_inactive_duration,omitempty"`
	// Deprecated: Do not use.
	ChannelMinimumFeeMsat int64 `protobuf:"varint,15,opt,name=channel_minimum_fee_msat,json=channelMinimumFeeMsat,proto3" json:"channel_minimum_fee_msat,omitempty"`
	// The cheapest fee option for opening a channel. Could be null if there are
	// no opening_fee_params in the menu (i.e. the LSP does not support opening
	// channels right now).
	CheapestOpeningFeeParams *OpeningFeeParams `protobuf:"bytes,16,opt,name=cheapest_opening_fee_params,json=cheapestOpeningFeeParams,proto3" json:"cheapest_opening_fee_params,omitempty"`
	// The opening fee options that are valid for the longest duration. Could be
	// null if there are no opening_fee_params in the menu (i.e. the LSP does not
	// support opening channels right now).
	LongestValidOpeningFeeParams *OpeningFeeParams `protobuf:"bytes,17,opt,name=longest_valid_opening_fee_params,json=longestValidOpeningFeeParams,proto3" json:"longest_valid_opening_fee_params,omitempty"`
}

func (x *LSPInformation) Reset() {
	*x = LSPInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LSPInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LSPInformation) ProtoMessage() {}

func (x *LSPInformation) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LSPInformation.ProtoReflect.Descriptor instead.
func (*LSPInformation) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{42}
}

func (x *LSPInformation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LSPInformation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LSPInformation) GetWidgetUrl() string {
	if x != nil {
		return x.WidgetUrl
	}
	return ""
}

func (x *LSPInformation) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *LSPInformation) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LSPInformation) GetChannelCapacity() int64 {
	if x != nil {
		return x.ChannelCapacity
	}
	return 0
}

func (x *LSPInformation) GetTargetConf() int32 {
	if x != nil {
		return x.TargetConf
	}
	return 0
}

func (x *LSPInformation) GetBaseFeeMsat() int64 {
	if x != nil {
		return x.BaseFeeMsat
	}
	return 0
}

func (x *LSPInformation) GetFeeRate() float64 {
	if x != nil {
		return x.FeeRate
	}
	return 0
}

func (x *LSPInformation) GetTimeLockDelta() uint32 {
	if x != nil {
		return x.TimeLockDelta
	}
	return 0
}

func (x *LSPInformation) GetMinHtlcMsat() int64 {
	if x != nil {
		return x.MinHtlcMsat
	}
	return 0
}

// Deprecated: Do not use.
func (x *LSPInformation) GetChannelFeePermyriad() int64 {
	if x != nil {
		return x.ChannelFeePermyriad
	}
	return 0
}

func (x *LSPInformation) GetLspPubkey() []byte {
	if x != nil {
		return x.LspPubkey
	}
	return nil
}

// Deprecated: Do not use.
func (x *LSPInformation) GetMaxInactiveDuration() int64 {
	if x != nil {
		return x.MaxInactiveDuration
	}
	return 0
}

// Deprecated: Do not use.
func (x *LSPInformation) GetChannelMinimumFeeMsat() int64 {
	if x != nil {
		return x.ChannelMinimumFeeMsat
	}
	return 0
}

func (x *LSPInformation) GetCheapestOpeningFeeParams() *OpeningFeeParams {
	if x != nil {
		return x.CheapestOpeningFeeParams
	}
	return nil
}

func (x *LSPInformation) GetLongestValidOpeningFeeParams() *OpeningFeeParams {
	if x != nil {
		return x.LongestValidOpeningFeeParams
	}
	return nil
}

type OpeningFeeParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / The minimum value in millisatoshi we will require for incoming HTLCs on the channel.
	MinMsat uint64 `protobuf:"varint,1,opt,name=min_msat,json=minMsat,proto3" json:"min_msat,omitempty"`
	// / The fee in ppm charged over liquidity when buying a channel.
	Proportional uint32 `protobuf:"varint,2,opt,name=proportional,proto3" json:"proportional,omitempty"`
	// / The time this opening fee params promise expires.
	ValidUntil string `protobuf:"bytes,3,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	// The channel can be closed if not used this duration in blocks.
	MaxIdleTime          uint32 `protobuf:"varint,4,opt,name=max_idle_time,json=maxIdleTime,proto3" json:"max_idle_time,omitempty"`
	MaxClientToSelfDelay uint32 `protobuf:"varint,5,opt,name=max_client_to_self_delay,json=maxClientToSelfDelay,proto3" json:"max_client_to_self_delay,omitempty"`
	Promise              string `protobuf:"bytes,6,opt,name=promise,proto3" json:"promise,omitempty"`
}

func (x *OpeningFeeParams) Reset() {
	*x = OpeningFeeParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpeningFeeParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpeningFeeParams) ProtoMessage() {}

func (x *OpeningFeeParams) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpeningFeeParams.ProtoReflect.Descriptor instead.
func (*OpeningFeeParams) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{43}
}

func (x *OpeningFeeParams) GetMinMsat() uint64 {
	if x != nil {
		return x.MinMsat
	}
	return 0
}

func (x *OpeningFeeParams) GetProportional() uint32 {
	if x != nil {
		return x.Proportional
	}
	return 0
}

func (x *OpeningFeeParams) GetValidUntil() string {
	if x != nil {
		return x.ValidUntil
	}
	return ""
}

func (x *OpeningFeeParams) GetMaxIdleTime() uint32 {
	if x != nil {
		return x.MaxIdleTime
	}
	return 0
}

func (x *OpeningFeeParams) GetMaxClientToSelfDelay() uint32 {
	if x != nil {
		return x.MaxClientToSelfDelay
	}
	return 0
}

func (x *OpeningFeeParams) GetPromise() string {
	if x != nil {
		return x.Promise
	}
	return ""
}

type LSPListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LSPListRequest) Reset() {
	*x = LSPListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LSPListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LSPListRequest) ProtoMessage() {}

func (x *LSPListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LSPListRequest.ProtoReflect.Descriptor instead.
func (*LSPListRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{44}
}

type LSPList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lsps map[string]*LSPInformation `protobuf:"bytes,1,rep,name=lsps,proto3" json:"lsps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // The key is the lsp id
}

func (x *LSPList) Reset() {
	*x = LSPList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LSPList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LSPList) ProtoMessage() {}

func (x *LSPList) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LSPList.ProtoReflect.Descriptor instead.
func (*LSPList) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{45}
}

func (x *LSPList) GetLsps() map[string]*LSPInformation {
	if x != nil {
		return x.Lsps
	}
	return nil
}

type LSPActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key is the lsp id.
	// The value is the timestamp in seconds of the last payment.
	Activity map[string]int64 `protobuf:"bytes,1,rep,name=activity,proto3" json:"activity,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *LSPActivity) Reset() {
	*x = LSPActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LSPActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LSPActivity) ProtoMessage() {}

func (x *LSPActivity) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LSPActivity.ProtoReflect.Descriptor instead.
func (*LSPActivity) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{46}
}

func (x *LSPActivity) GetActivity() map[string]int64 {
	if x != nil {
		return x.Activity
	}
	return nil
}

type ConnectLSPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LspId string `protobuf:"bytes,1,opt,name=lsp_id,json=lspId,proto3" json:"lsp_id,omitempty"`
}

func (x *ConnectLSPRequest) Reset() {
	*x = ConnectLSPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectLSPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectLSPRequest) ProtoMessage() {}

func (x *ConnectLSPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectLSPRequest.ProtoReflect.Descriptor instead.
func (*ConnectLSPRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{47}
}

func (x *ConnectLSPRequest) GetLspId() string {
	if x != nil {
		return x.LspId
	}
	return ""
}

type ConnectLSPReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConnectLSPReply) Reset() {
	*x = ConnectLSPReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectLSPReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectLSPReply) ProtoMessage() {}

func (x *ConnectLSPReply) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectLSPReply.ProtoReflect.Descriptor instead.
func (*ConnectLSPReply) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{48}
}

type LNUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*LNUrlResponse_Withdraw
	//	*LNUrlResponse_Channel
	//	*LNUrlResponse_Auth
	//	*LNUrlResponse_PayResponse1
	Action isLNUrlResponse_Action `protobuf_oneof:"action"`
}

func (x *LNUrlResponse) Reset() {
	*x = LNUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LNUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LNUrlResponse) ProtoMessage() {}

func (x *LNUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LNUrlResponse.ProtoReflect.Descriptor instead.
func (*LNUrlResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{49}
}

func (m *LNUrlResponse) GetAction() isLNUrlResponse_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *LNUrlResponse) GetWithdraw() *LNUrlWithdraw {
	if x, ok := x.GetAction().(*LNUrlResponse_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (x *LNUrlResponse) GetChannel() *LNURLChannel {
	if x, ok := x.GetAction().(*LNUrlResponse_Channel); ok {
		return x.Channel
	}
	return nil
}

func (x *LNUrlResponse) GetAuth() *LNURLAuth {
	if x, ok := x.GetAction().(*LNUrlResponse_Auth); ok {
		return x.Auth
	}
	return nil
}

func (x *LNUrlResponse) GetPayResponse1() *LNURLPayResponse1 {
	if x, ok := x.GetAction().(*LNUrlResponse_PayResponse1); ok {
		return x.PayResponse1
	}
	return nil
}

type isLNUrlResponse_Action interface {
	isLNUrlResponse_Action()
}

type LNUrlResponse_Withdraw struct {
	Withdraw *LNUrlWithdraw `protobuf:"bytes,1,opt,name=withdraw,proto3,oneof"`
}

type LNUrlResponse_Channel struct {
	Channel *LNURLChannel `protobuf:"bytes,2,opt,name=channel,proto3,oneof"`
}

type LNUrlResponse_Auth struct {
	Auth *LNURLAuth `protobuf:"bytes,3,opt,name=auth,proto3,oneof"`
}

type LNUrlResponse_PayResponse1 struct {
	PayResponse1 *LNURLPayResponse1 `protobuf:"bytes,4,opt,name=payResponse1,proto3,oneof"`
}

func (*LNUrlResponse_Withdraw) isLNUrlResponse_Action() {}

func (*LNUrlResponse_Channel) isLNUrlResponse_Action() {}

func (*LNUrlResponse_Auth) isLNUrlResponse_Action() {}

func (*LNUrlResponse_PayResponse1) isLNUrlResponse_Action() {}

type LNUrlWithdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinAmount          int64  `protobuf:"varint,1,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	MaxAmount          int64  `protobuf:"varint,2,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	DefaultDescription string `protobuf:"bytes,3,opt,name=default_description,json=defaultDescription,proto3" json:"default_description,omitempty"`
}

func (x *LNUrlWithdraw) Reset() {
	*x = LNUrlWithdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LNUrlWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LNUrlWithdraw) ProtoMessage() {}

func (x *LNUrlWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LNUrlWithdraw.ProtoReflect.Descriptor instead.
func (*LNUrlWithdraw) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{50}
}

func (x *LNUrlWithdraw) GetMinAmount() int64 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

func (x *LNUrlWithdraw) GetMaxAmount() int64 {
	if x != nil {
		return x.MaxAmount
	}
	return 0
}

func (x *LNUrlWithdraw) GetDefaultDescription() string {
	if x != nil {
		return x.DefaultDescription
	}
	return ""
}

type LNURLChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K1       string `protobuf:"bytes,1,opt,name=k1,proto3" json:"k1,omitempty"`
	Callback string `protobuf:"bytes,2,opt,name=callback,proto3" json:"callback,omitempty"`
	Uri      string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *LNURLChannel) Reset() {
	*x = LNURLChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LNURLChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LNURLChannel) ProtoMessage() {}

func (x *LNURLChannel) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LNURLChannel.ProtoReflect.Descriptor instead.
func (*LNURLChannel) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{51}
}

func (x *LNURLChannel) GetK1() string {
	if x != nil {
		return x.K1
	}
	return ""
}

func (x *LNURLChannel) GetCallback() string {
	if x != nil {
		return x.Callback
	}
	return ""
}

func (x *LNURLChannel) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type LNURLAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag      string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	K1       string `protobuf:"bytes,2,opt,name=k1,proto3" json:"k1,omitempty"`
	Callback string `protobuf:"bytes,3,opt,name=callback,proto3" json:"callback,omitempty"`
	Host     string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Jwt      bool   `protobuf:"varint,5,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *LNURLAuth) Reset() {
	*x = LNURLAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LNURLAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LNURLAuth) ProtoMessage() {}

func (x *LNURLAuth) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LNURLAuth.ProtoReflect.Descriptor instead.
func (*LNURLAuth) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{52}
}

func (x *LNURLAuth) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *LNURLAuth) GetK1() string {
	if x != nil {
		return x.K1
	}
	return ""
}

func (x *LNURLAuth) GetCallback() string {
	if x != nil {
		return x.Callback
	}
	return ""
}

func (x *LNURLAuth) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LNURLAuth) GetJwt() bool {
	if x != nil {
		return x.Jwt
	}
	return false
}

type LNUrlPayImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataUri string `protobuf:"bytes,1,opt,name=data_uri,json=dataUri,proto3" json:"data_uri,omitempty"`
	Ext     string `protobuf:"bytes,2,opt,name=ext,proto3" json:"ext,omitempty"`
	Bytes   []byte `protobuf:"bytes,3,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *LNUrlPayImage) Reset() {
	*x = LNUrlPayImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LNUrlPayImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LNUrlPayImage) ProtoMessage() {}

func (x *LNUrlPayImage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LNUrlPayImage.ProtoReflect.Descriptor instead.
func (*LNUrlPayImage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{53}
}

func (x *LNUrlPayImage) GetDataUri() string {
	if x != nil {
		return x.DataUri
	}
	return ""
}

func (x *LNUrlPayImage) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *LNUrlPayImage) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type LNUrlPayMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry           []string       `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
	Description     string         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	LongDescription string         `protobuf:"bytes,3,opt,name=long_description,json=longDescription,proto3" json:"long_description,omitempty"`
	Image           *LNUrlPayImage `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *LNUrlPayMetadata) Reset() {
	*x = LNUrlPayMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LNUrlPayMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LNUrlPayMetadata) ProtoMessage() {}

func (x *LNUrlPayMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LNUrlPayMetadata.ProtoReflect.Descriptor instead.
func (*LNUrlPayMetadata) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{54}
}

func (x *LNUrlPayMetadata) GetEntry() []string {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *LNUrlPayMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LNUrlPayMetadata) GetLongDescription() string {
	if x != nil {
		return x.LongDescription
	}
	return ""
}

func (x *LNUrlPayMetadata) GetImage() *LNUrlPayImage {
	if x != nil {
		return x.Image
	}
	return nil
}

type LNURLPayResponse1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Callback         string              `protobuf:"bytes,1,opt,name=callback,proto3" json:"callback,omitempty"`
	MinAmount        int64               `protobuf:"varint,2,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	MaxAmount        int64               `protobuf:"varint,3,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	Metadata         []*LNUrlPayMetadata `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty"`
	Tag              string              `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	Amount           uint64              `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	FromNodes        string              `protobuf:"bytes,7,opt,name=from_nodes,json=fromNodes,proto3" json:"from_nodes,omitempty"`
	Comment          string              `protobuf:"bytes,8,opt,name=comment,proto3" json:"comment,omitempty"`
	Host             string              `protobuf:"bytes,9,opt,name=host,proto3" json:"host,omitempty"`
	CommentAllowed   int64               `protobuf:"varint,10,opt,name=comment_allowed,json=commentAllowed,proto3" json:"comment_allowed,omitempty"`
	LightningAddress string              `protobuf:"bytes,11,opt,name=lightning_address,json=lightningAddress,proto3" json:"lightning_address,omitempty"`
}

func (x *LNURLPayResponse1) Reset() {
	*x = LNURLPayResponse1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LNURLPayResponse1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LNURLPayResponse1) ProtoMessage() {}

func (x *LNURLPayResponse1) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LNURLPayResponse1.ProtoReflect.Descriptor instead.
func (*LNURLPayResponse1) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{55}
}

func (x *LNURLPayResponse1) GetCallback() string {
	if x != nil {
		return x.Callback
	}
	return ""
}

func (x *LNURLPayResponse1) GetMinAmount() int64 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

func (x *LNURLPayResponse1) GetMaxAmount() int64 {
	if x != nil {
		return x.MaxAmount
	}
	return 0
}

func (x *LNURLPayResponse1) GetMetadata() []*LNUrlPayMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *LNURLPayResponse1) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *LNURLPayResponse1) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *LNURLPayResponse1) GetFromNodes() string {
	if x != nil {
		return x.FromNodes
	}
	return ""
}

func (x *LNURLPayResponse1) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *LNURLPayResponse1) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LNURLPayResponse1) GetCommentAllowed() int64 {
	if x != nil {
		return x.CommentAllowed
	}
	return 0
}

func (x *LNURLPayResponse1) GetLightningAddress() string {
	if x != nil {
		return x.LightningAddress
	}
	return ""
}

type SuccessAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag         string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Url         string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Message     string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Ciphertext  string `protobuf:"bytes,5,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	Iv          string `protobuf:"bytes,6,opt,name=iv,proto3" json:"iv,omitempty"`
}

func (x *SuccessAction) Reset() {
	*x = SuccessAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessAction) ProtoMessage() {}

func (x *SuccessAction) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessAction.ProtoReflect.Descriptor instead.
func (*SuccessAction) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{56}
}

func (x *SuccessAction) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SuccessAction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SuccessAction) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SuccessAction) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SuccessAction) GetCiphertext() string {
	if x != nil {
		return x.Ciphertext
	}
	return ""
}

func (x *SuccessAction) GetIv() string {
	if x != nil {
		return x.Iv
	}
	return ""
}

type LNUrlPayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentHash        string              `protobuf:"bytes,1,opt,name=paymentHash,proto3" json:"paymentHash,omitempty"`
	Invoice            string              `protobuf:"bytes,2,opt,name=invoice,proto3" json:"invoice,omitempty"`
	SuccessAction      *SuccessAction      `protobuf:"bytes,3,opt,name=success_action,json=successAction,proto3" json:"success_action,omitempty"`
	Comment            string              `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	InvoiceDescription string              `protobuf:"bytes,5,opt,name=invoice_description,json=invoiceDescription,proto3" json:"invoice_description,omitempty"`
	Metadata           []*LNUrlPayMetadata `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty"`
	Host               string              `protobuf:"bytes,7,opt,name=host,proto3" json:"host,omitempty"`
	LightningAddress   string              `protobuf:"bytes,8,opt,name=lightning_address,json=lightningAddress,proto3" json:"lightning_address,omitempty"`
}

func (x *LNUrlPayInfo) Reset() {
	*x = LNUrlPayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LNUrlPayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LNUrlPayInfo) ProtoMessage() {}

func (x *LNUrlPayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LNUrlPayInfo.ProtoReflect.Descriptor instead.
func (*LNUrlPayInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{57}
}

func (x *LNUrlPayInfo) GetPaymentHash() string {
	if x != nil {
		return x.PaymentHash
	}
	return ""
}

func (x *LNUrlPayInfo) GetInvoice() string {
	if x != nil {
		return x.Invoice
	}
	return ""
}

func (x *LNUrlPayInfo) GetSuccessAction() *SuccessAction {
	if x != nil {
		return x.SuccessAction
	}
	return nil
}

func (x *LNUrlPayInfo) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *LNUrlPayInfo) GetInvoiceDescription() string {
	if x != nil {
		return x.InvoiceDescription
	}
	return ""
}

func (x *LNUrlPayInfo) GetMetadata() []*LNUrlPayMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *LNUrlPayInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LNUrlPayInfo) GetLightningAddress() string {
	if x != nil {
		return x.LightningAddress
	}
	return ""
}

type LNUrlPayInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoList []*LNUrlPayInfo `protobuf:"bytes,1,rep,name=infoList,proto3" json:"infoList,omitempty"`
}

func (x *LNUrlPayInfoList) Reset() {
	*x = LNUrlPayInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LNUrlPayInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LNUrlPayInfoList) ProtoMessage() {}

func (x *LNUrlPayInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LNUrlPayInfoList.ProtoReflect.Descriptor instead.
func (*LNUrlPayInfoList) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{58}
}

func (x *LNUrlPayInfoList) GetInfoList() []*LNUrlPayInfo {
	if x != nil {
		return x.InfoList
	}
	return nil
}

type ReverseSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount   int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	FeesHash string `protobuf:"bytes,3,opt,name=fees_hash,json=feesHash,proto3" json:"fees_hash,omitempty"`
}

func (x *ReverseSwapRequest) Reset() {
	*x = ReverseSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReverseSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseSwapRequest) ProtoMessage() {}

func (x *ReverseSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseSwapRequest.ProtoReflect.Descriptor instead.
func (*ReverseSwapRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{59}
}

func (x *ReverseSwapRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ReverseSwapRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ReverseSwapRequest) GetFeesHash() string {
	if x != nil {
		return x.FeesHash
	}
	return ""
}

type ReverseSwap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Invoice            string `protobuf:"bytes,2,opt,name=invoice,proto3" json:"invoice,omitempty"`
	Script             string `protobuf:"bytes,3,opt,name=script,proto3" json:"script,omitempty"`
	LockupAddress      string `protobuf:"bytes,4,opt,name=lockup_address,json=lockupAddress,proto3" json:"lockup_address,omitempty"`
	Preimage           string `protobuf:"bytes,5,opt,name=preimage,proto3" json:"preimage,omitempty"`
	Key                string `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	ClaimAddress       string `protobuf:"bytes,7,opt,name=claim_address,json=claimAddress,proto3" json:"claim_address,omitempty"`
	LnAmount           int64  `protobuf:"varint,8,opt,name=ln_amount,json=lnAmount,proto3" json:"ln_amount,omitempty"`
	OnchainAmount      int64  `protobuf:"varint,9,opt,name=onchain_amount,json=onchainAmount,proto3" json:"onchain_amount,omitempty"`
	TimeoutBlockHeight int64  `protobuf:"varint,10,opt,name=timeout_block_height,json=timeoutBlockHeight,proto3" json:"timeout_block_height,omitempty"`
	StartBlockHeight   int64  `protobuf:"varint,11,opt,name=start_block_height,json=startBlockHeight,proto3" json:"start_block_height,omitempty"`
	ClaimFee           int64  `protobuf:"varint,12,opt,name=claim_fee,json=claimFee,proto3" json:"claim_fee,omitempty"`
	ClaimTxid          string `protobuf:"bytes,13,opt,name=claim_txid,json=claimTxid,proto3" json:"claim_txid,omitempty"`
}

func (x *ReverseSwap) Reset() {
	*x = ReverseSwap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReverseSwap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseSwap) ProtoMessage() {}

func (x *ReverseSwap) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseSwap.ProtoReflect.Descriptor instead.
func (*ReverseSwap) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{60}
}

func (x *ReverseSwap) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReverseSwap) GetInvoice() string {
	if x != nil {
		return x.Invoice
	}
	return ""
}

func (x *ReverseSwap) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *ReverseSwap) GetLockupAddress() string {
	if x != nil {
		return x.LockupAddress
	}
	return ""
}

func (x *ReverseSwap) GetPreimage() string {
	if x != nil {
		return x.Preimage
	}
	return ""
}

func (x *ReverseSwap) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReverseSwap) GetClaimAddress() string {
	if x != nil {
		return x.ClaimAddress
	}
	return ""
}

func (x *ReverseSwap) GetLnAmount() int64 {
	if x != nil {
		return x.LnAmount
	}
	return 0
}

func (x *ReverseSwap) GetOnchainAmount() int64 {
	if x != nil {
		return x.OnchainAmount
	}
	return 0
}

func (x *ReverseSwap) GetTimeoutBlockHeight() int64 {
	if x != nil {
		return x.TimeoutBlockHeight
	}
	return 0
}

func (x *ReverseSwap) GetStartBlockHeight() int64 {
	if x != nil {
		return x.StartBlockHeight
	}
	return 0
}

func (x *ReverseSwap) GetClaimFee() int64 {
	if x != nil {
		return x.ClaimFee
	}
	return 0
}

func (x *ReverseSwap) GetClaimTxid() string {
	if x != nil {
		return x.ClaimTxid
	}
	return ""
}

type ReverseSwapFees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percentage float64 `protobuf:"fixed64,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Lockup     int64   `protobuf:"varint,2,opt,name=lockup,proto3" json:"lockup,omitempty"`
	Claim      int64   `protobuf:"varint,3,opt,name=claim,proto3" json:"claim,omitempty"`
}

func (x *ReverseSwapFees) Reset() {
	*x = ReverseSwapFees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReverseSwapFees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseSwapFees) ProtoMessage() {}

func (x *ReverseSwapFees) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseSwapFees.ProtoReflect.Descriptor instead.
func (*ReverseSwapFees) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{61}
}

func (x *ReverseSwapFees) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *ReverseSwapFees) GetLockup() int64 {
	if x != nil {
		return x.Lockup
	}
	return 0
}

func (x *ReverseSwapFees) GetClaim() int64 {
	if x != nil {
		return x.Claim
	}
	return 0
}

type ReverseSwapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min      int64            `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max      int64            `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	Fees     *ReverseSwapFees `protobuf:"bytes,3,opt,name=fees,proto3" json:"fees,omitempty"`
	FeesHash string           `protobuf:"bytes,4,opt,name=fees_hash,json=feesHash,proto3" json:"fees_hash,omitempty"`
}

func (x *ReverseSwapInfo) Reset() {
	*x = ReverseSwapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReverseSwapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseSwapInfo) ProtoMessage() {}

func (x *ReverseSwapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseSwapInfo.ProtoReflect.Descriptor instead.
func (*ReverseSwapInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{62}
}

func (x *ReverseSwapInfo) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *ReverseSwapInfo) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *ReverseSwapInfo) GetFees() *ReverseSwapFees {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *ReverseSwapInfo) GetFeesHash() string {
	if x != nil {
		return x.FeesHash
	}
	return ""
}

type ReverseSwapPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash                    string                   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PushNotificationDetails *PushNotificationDetails `protobuf:"bytes,2,opt,name=push_notification_details,json=pushNotificationDetails,proto3" json:"push_notification_details,omitempty"`
	Fee                     int64                    `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *ReverseSwapPaymentRequest) Reset() {
	*x = ReverseSwapPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReverseSwapPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseSwapPaymentRequest) ProtoMessage() {}

func (x *ReverseSwapPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseSwapPaymentRequest.ProtoReflect.Descriptor instead.
func (*ReverseSwapPaymentRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{63}
}

func (x *ReverseSwapPaymentRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ReverseSwapPaymentRequest) GetPushNotificationDetails() *PushNotificationDetails {
	if x != nil {
		return x.PushNotificationDetails
	}
	return nil
}

func (x *ReverseSwapPaymentRequest) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type PushNotificationDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Body     string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *PushNotificationDetails) Reset() {
	*x = PushNotificationDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushNotificationDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushNotificationDetails) ProtoMessage() {}

func (x *PushNotificationDetails) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushNotificationDetails.ProtoReflect.Descriptor instead.
func (*PushNotificationDetails) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{64}
}

func (x *PushNotificationDetails) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PushNotificationDetails) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PushNotificationDetails) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type ReverseSwapPaymentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	TxID string `protobuf:"bytes,2,opt,name=txID,proto3" json:"txID,omitempty"`
	Eta  int32  `protobuf:"varint,3,opt,name=eta,proto3" json:"eta,omitempty"`
}

func (x *ReverseSwapPaymentStatus) Reset() {
	*x = ReverseSwapPaymentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReverseSwapPaymentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseSwapPaymentStatus) ProtoMessage() {}

func (x *ReverseSwapPaymentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseSwapPaymentStatus.ProtoReflect.Descriptor instead.
func (*ReverseSwapPaymentStatus) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{65}
}

func (x *ReverseSwapPaymentStatus) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ReverseSwapPaymentStatus) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *ReverseSwapPaymentStatus) GetEta() int32 {
	if x != nil {
		return x.Eta
	}
	return 0
}

type ReverseSwapPaymentStatuses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentsStatus []*ReverseSwapPaymentStatus `protobuf:"bytes,1,rep,name=payments_status,json=paymentsStatus,proto3" json:"payments_status,omitempty"`
}

func (x *ReverseSwapPaymentStatuses) Reset() {
	*x = ReverseSwapPaymentStatuses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReverseSwapPaymentStatuses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseSwapPaymentStatuses) ProtoMessage() {}

func (x *ReverseSwapPaymentStatuses) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseSwapPaymentStatuses.ProtoReflect.Descriptor instead.
func (*ReverseSwapPaymentStatuses) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{66}
}

func (x *ReverseSwapPaymentStatuses) GetPaymentsStatus() []*ReverseSwapPaymentStatus {
	if x != nil {
		return x.PaymentsStatus
	}
	return nil
}

type ReverseSwapClaimFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Fee  int64  `protobuf:"varint,2,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *ReverseSwapClaimFee) Reset() {
	*x = ReverseSwapClaimFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReverseSwapClaimFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseSwapClaimFee) ProtoMessage() {}

func (x *ReverseSwapClaimFee) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseSwapClaimFee.ProtoReflect.Descriptor instead.
func (*ReverseSwapClaimFee) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{67}
}

func (x *ReverseSwapClaimFee) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ReverseSwapClaimFee) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type ClaimFeeEstimates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fees map[int32]int64 `protobuf:"bytes,1,rep,name=fees,proto3" json:"fees,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ClaimFeeEstimates) Reset() {
	*x = ClaimFeeEstimates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimFeeEstimates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimFeeEstimates) ProtoMessage() {}

func (x *ClaimFeeEstimates) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimFeeEstimates.ProtoReflect.Descriptor instead.
func (*ClaimFeeEstimates) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{68}
}

func (x *ClaimFeeEstimates) GetFees() map[int32]int64 {
	if x != nil {
		return x.Fees
	}
	return nil
}

type UnspendLockupInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeightHint   uint32 `protobuf:"varint,1,opt,name=height_hint,json=heightHint,proto3" json:"height_hint,omitempty"`
	LockupScript []byte `protobuf:"bytes,2,opt,name=lockup_script,json=lockupScript,proto3" json:"lockup_script,omitempty"`
	ClaimTxHash  []byte `protobuf:"bytes,3,opt,name=claim_tx_hash,json=claimTxHash,proto3" json:"claim_tx_hash,omitempty"`
}

func (x *UnspendLockupInformation) Reset() {
	*x = UnspendLockupInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnspendLockupInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnspendLockupInformation) ProtoMessage() {}

func (x *UnspendLockupInformation) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnspendLockupInformation.ProtoReflect.Descriptor instead.
func (*UnspendLockupInformation) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{69}
}

func (x *UnspendLockupInformation) GetHeightHint() uint32 {
	if x != nil {
		return x.HeightHint
	}
	return 0
}

func (x *UnspendLockupInformation) GetLockupScript() []byte {
	if x != nil {
		return x.LockupScript
	}
	return nil
}

func (x *UnspendLockupInformation) GetClaimTxHash() []byte {
	if x != nil {
		return x.ClaimTxHash
	}
	return nil
}

type TransactionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx     []byte `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	TxHash string `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Fees   int64  `protobuf:"varint,3,opt,name=fees,proto3" json:"fees,omitempty"`
}

func (x *TransactionDetails) Reset() {
	*x = TransactionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetails) ProtoMessage() {}

func (x *TransactionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetails.ProtoReflect.Descriptor instead.
func (*TransactionDetails) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{70}
}

func (x *TransactionDetails) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *TransactionDetails) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *TransactionDetails) GetFees() int64 {
	if x != nil {
		return x.Fees
	}
	return 0
}

type SweepAllCoinsTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amt          int64                         `protobuf:"varint,1,opt,name=amt,proto3" json:"amt,omitempty"`
	Transactions map[int32]*TransactionDetails `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SweepAllCoinsTransactions) Reset() {
	*x = SweepAllCoinsTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SweepAllCoinsTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SweepAllCoinsTransactions) ProtoMessage() {}

func (x *SweepAllCoinsTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SweepAllCoinsTransactions.ProtoReflect.Descriptor instead.
func (*SweepAllCoinsTransactions) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{71}
}

func (x *SweepAllCoinsTransactions) GetAmt() int64 {
	if x != nil {
		return x.Amt
	}
	return 0
}

func (x *SweepAllCoinsTransactions) GetTransactions() map[int32]*TransactionDetails {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type DownloadBackupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []string `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *DownloadBackupResponse) Reset() {
	*x = DownloadBackupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadBackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadBackupResponse) ProtoMessage() {}

func (x *DownloadBackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadBackupResponse.ProtoReflect.Descriptor instead.
func (*DownloadBackupResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{72}
}

func (x *DownloadBackupResponse) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type TorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Control string `protobuf:"bytes,1,opt,name=control,proto3" json:"control,omitempty"`
	Http    string `protobuf:"bytes,2,opt,name=http,proto3" json:"http,omitempty"`
	Socks   string `protobuf:"bytes,3,opt,name=socks,proto3" json:"socks,omitempty"`
}

func (x *TorConfig) Reset() {
	*x = TorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TorConfig) ProtoMessage() {}

func (x *TorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TorConfig.ProtoReflect.Descriptor instead.
func (*TorConfig) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{73}
}

func (x *TorConfig) GetControl() string {
	if x != nil {
		return x.Control
	}
	return ""
}

func (x *TorConfig) GetHttp() string {
	if x != nil {
		return x.Http
	}
	return ""
}

func (x *TorConfig) GetSocks() string {
	if x != nil {
		return x.Socks
	}
	return ""
}

type Utxo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid        string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout        uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Value       int64  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	IsConfirmed bool   `protobuf:"varint,4,opt,name=isConfirmed,proto3" json:"isConfirmed,omitempty"`
}

func (x *Utxo) Reset() {
	*x = Utxo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Utxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Utxo) ProtoMessage() {}

func (x *Utxo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Utxo.ProtoReflect.Descriptor instead.
func (*Utxo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{74}
}

func (x *Utxo) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Utxo) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *Utxo) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Utxo) GetIsConfirmed() bool {
	if x != nil {
		return x.IsConfirmed
	}
	return false
}

type AddressInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address            string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ConfirmedBalance   int64   `protobuf:"varint,2,opt,name=confirmedBalance,proto3" json:"confirmedBalance,omitempty"`
	UnconfirmedBalance int64   `protobuf:"varint,3,opt,name=unconfirmedBalance,proto3" json:"unconfirmedBalance,omitempty"`
	Utxos              []*Utxo `protobuf:"bytes,4,rep,name=utxos,proto3" json:"utxos,omitempty"`
}

func (x *AddressInfo) Reset() {
	*x = AddressInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressInfo) ProtoMessage() {}

func (x *AddressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressInfo.ProtoReflect.Descriptor instead.
func (*AddressInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{75}
}

func (x *AddressInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressInfo) GetConfirmedBalance() int64 {
	if x != nil {
		return x.ConfirmedBalance
	}
	return 0
}

func (x *AddressInfo) GetUnconfirmedBalance() int64 {
	if x != nil {
		return x.UnconfirmedBalance
	}
	return 0
}

func (x *AddressInfo) GetUtxos() []*Utxo {
	if x != nil {
		return x.Utxos
	}
	return nil
}

type CreateSlotSweepRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot      *AddressInfo `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Recipient string       `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
}

func (x *CreateSlotSweepRequest) Reset() {
	*x = CreateSlotSweepRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSlotSweepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSlotSweepRequest) ProtoMessage() {}

func (x *CreateSlotSweepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSlotSweepRequest.ProtoReflect.Descriptor instead.
func (*CreateSlotSweepRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{76}
}

func (x *CreateSlotSweepRequest) GetSlot() *AddressInfo {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *CreateSlotSweepRequest) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

type RawSlotSweepTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgTx               []byte  `protobuf:"bytes,1,opt,name=msgTx,proto3" json:"msgTx,omitempty"`
	Input               int64   `protobuf:"varint,2,opt,name=input,proto3" json:"input,omitempty"`
	Output              int64   `protobuf:"varint,3,opt,name=output,proto3" json:"output,omitempty"`
	VSize               float64 `protobuf:"fixed64,4,opt,name=vSize,proto3" json:"vSize,omitempty"`
	Fees                int64   `protobuf:"varint,5,opt,name=fees,proto3" json:"fees,omitempty"`
	TargetConfirmations int32   `protobuf:"varint,6,opt,name=targetConfirmations,proto3" json:"targetConfirmations,omitempty"`
}

func (x *RawSlotSweepTransaction) Reset() {
	*x = RawSlotSweepTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawSlotSweepTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawSlotSweepTransaction) ProtoMessage() {}

func (x *RawSlotSweepTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawSlotSweepTransaction.ProtoReflect.Descriptor instead.
func (*RawSlotSweepTransaction) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{77}
}

func (x *RawSlotSweepTransaction) GetMsgTx() []byte {
	if x != nil {
		return x.MsgTx
	}
	return nil
}

func (x *RawSlotSweepTransaction) GetInput() int64 {
	if x != nil {
		return x.Input
	}
	return 0
}

func (x *RawSlotSweepTransaction) GetOutput() int64 {
	if x != nil {
		return x.Output
	}
	return 0
}

func (x *RawSlotSweepTransaction) GetVSize() float64 {
	if x != nil {
		return x.VSize
	}
	return 0
}

func (x *RawSlotSweepTransaction) GetFees() int64 {
	if x != nil {
		return x.Fees
	}
	return 0
}

func (x *RawSlotSweepTransaction) GetTargetConfirmations() int32 {
	if x != nil {
		return x.TargetConfirmations
	}
	return 0
}

type CreateSlotSweepResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs []*RawSlotSweepTransaction `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *CreateSlotSweepResponse) Reset() {
	*x = CreateSlotSweepResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSlotSweepResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSlotSweepResponse) ProtoMessage() {}

func (x *CreateSlotSweepResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSlotSweepResponse.ProtoReflect.Descriptor instead.
func (*CreateSlotSweepResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{78}
}

func (x *CreateSlotSweepResponse) GetTxs() []*RawSlotSweepTransaction {
	if x != nil {
		return x.Txs
	}
	return nil
}

type SignSlotSweepRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressInfo *AddressInfo             `protobuf:"bytes,1,opt,name=addressInfo,proto3" json:"addressInfo,omitempty"`
	Transaction *RawSlotSweepTransaction `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
	PrivateKey  []byte                   `protobuf:"bytes,3,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
}

func (x *SignSlotSweepRequest) Reset() {
	*x = SignSlotSweepRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignSlotSweepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignSlotSweepRequest) ProtoMessage() {}

func (x *SignSlotSweepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignSlotSweepRequest.ProtoReflect.Descriptor instead.
func (*SignSlotSweepRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{79}
}

func (x *SignSlotSweepRequest) GetAddressInfo() *AddressInfo {
	if x != nil {
		return x.AddressInfo
	}
	return nil
}

func (x *SignSlotSweepRequest) GetTransaction() *RawSlotSweepTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *SignSlotSweepRequest) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x16, 0x0a,
	0x14, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x9e, 0x01, 0x0a, 0x12,
	0x41, 0x64, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x73, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x73, 0x70, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x46, 0x65, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x41, 0x0a, 0x11,
	0x46, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x52, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x73,
	0x70, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x73, 0x70,
	0x46, 0x65, 0x65, 0x22, 0x55, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x6f,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x79, 0x6e,
	0x63, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0xe2, 0x05, 0x0a, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x6d,
	0x61, 0x78, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x6d, 0x61, 0x78, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x54, 0x6f, 0x50, 0x61, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x54, 0x6f, 0x50, 0x61, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f,
	0x64, 0x65, 0x46, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x46, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x43, 0x68, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d,
	0x61, 0x78, 0x43, 0x68, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x61, 0x64, 0x79, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x70, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x70, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x65,
	0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x14, 0x75, 0x6e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x63, 0x0a, 0x0d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x44,
	0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a,
	0x15, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4c, 0x4f, 0x53,
	0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x22,
	0xfd, 0x07, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x33, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x54,
	0x78, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x54, 0x78, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a,
	0x16, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x78, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54,
	0x78, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x6e, 0x64,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x6e,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6c, 0x6c,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46,
	0x75, 0x6c, 0x6c, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x78, 0x49, 0x44, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x78, 0x49, 0x44, 0x12, 0x36, 0x0a,
	0x16, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x77,
	0x65, 0x65, 0x70, 0x54, 0x78, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x77, 0x65, 0x65,
	0x70, 0x54, 0x78, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65,
	0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x0c, 0x6c, 0x6e, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x4e, 0x55,
	0x72, 0x6c, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6c, 0x6e, 0x75, 0x72, 0x6c,
	0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49,
	0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x41,
	0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x43,
	0x4c, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x04, 0x22,
	0x41, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x57, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x58, 0x0a, 0x16, 0x53,
	0x65, 0x6e, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x61, 0x74, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x61, 0x74, 0x50, 0x65, 0x72, 0x42, 0x79,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x22, 0x65, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0xc3, 0x02, 0x0a,
	0x19, 0x53, 0x70, 0x6f, 0x6e, 0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x65,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x73, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x66, 0x65, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x73, 0x61, 0x74, 0x12, 0x3a,
	0x0a, 0x03, 0x74, 0x6c, 0x76, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x53, 0x70, 0x6f, 0x6e, 0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x6c, 0x76,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x74, 0x6c, 0x76, 0x1a, 0x36, 0x0a, 0x08, 0x54, 0x6c,
	0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xad, 0x02, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x65,
	0x6d, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x79, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x79, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61,
	0x79, 0x65, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x52, 0x4c, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x65, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4d,
	0x65, 0x6d, 0x6f, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x6c, 0x73, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x53, 0x50, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6c, 0x73, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x65, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x65,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x46, 0x65, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x64, 0x0a, 0x07, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x74, 0x50, 0x61, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6d, 0x74, 0x50, 0x61, 0x69, 0x64, 0x22,
	0x74, 0x0a, 0x24, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x53, 0x50, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x6c, 0x73, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x4c, 0x53, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x6c, 0x73, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x25, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x53,
	0x50, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x69,
	0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x64, 0x0a, 0x22, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x22, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x84, 0x05, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9c, 0x04, 0x0a,
	0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x41, 0x49, 0x44, 0x10, 0x04,
	0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14,
	0x46, 0x55, 0x4e, 0x44, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x20, 0x0a, 0x1c, 0x46, 0x55, 0x4e, 0x44, 0x5f, 0x41,
	0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x4e, 0x54, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x41, 0x43, 0x4b,
	0x55, 0x50, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d,
	0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x09, 0x12,
	0x16, 0x0a, 0x12, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x41, 0x43, 0x4b, 0x55,
	0x50, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x10,
	0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x41, 0x43, 0x4b, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0d, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x41, 0x59,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x0e,
	0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x5f, 0x53, 0x57, 0x41, 0x50,
	0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x0f,
	0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x5f, 0x53, 0x57, 0x41, 0x50,
	0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44,
	0x10, 0x10, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x5f, 0x53, 0x57,
	0x41, 0x50, 0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x11, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x5f, 0x53, 0x57, 0x41,
	0x50, 0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45,
	0x44, 0x10, 0x12, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x53, 0x50, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e,
	0x45, 0x4c, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x45, 0x44, 0x10, 0x13, 0x12, 0x1e, 0x0a, 0x1a, 0x42,
	0x41, 0x43, 0x4b, 0x55, 0x50, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x53, 0x54,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x10, 0x14, 0x22, 0xf6, 0x01, 0x0a, 0x10,
	0x41, 0x64, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61,
	0x78, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x22, 0x32, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x20, 0x0a, 0x0c, 0x73,
	0x61, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x61, 0x74, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x22, 0x75, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a,
	0x0f, 0x73, 0x77, 0x61, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x77,
	0x61, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73,
	0x77, 0x61, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24,
	0x0a, 0x0d, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x54, 0x6f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x54, 0x6f, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xec, 0x01, 0x0a, 0x0f, 0x46, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x49, 0x0a, 0x14, 0x75, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x77,
	0x61, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x75,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x13, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53,
	0x77, 0x61, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x0f, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd6, 0x03, 0x0a, 0x0f, 0x53, 0x77, 0x61, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x38, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x17, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x69,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50,
	0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x78, 0x49, 0x44, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x54, 0x78, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x53, 0x77, 0x61, 0x70, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x09, 0x73, 0x77, 0x61, 0x70, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x78, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x54, 0x78, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x54,
	0x6f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x68,
	0x6f, 0x75, 0x72, 0x73, 0x54, 0x6f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b,
	0x6e, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x6e, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x46,
	0x0a, 0x0f, 0x53, 0x77, 0x61, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x77, 0x61, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x63, 0x68, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0x69, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x63, 0x68, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x22, 0x71, 0x0a, 0x17, 0x52, 0x61, 0x74, 0x63, 0x68, 0x65, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x1c, 0x52, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x4f, 0x0a, 0x15, 0x52, 0x61, 0x74, 0x63, 0x68, 0x65, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x61, 0x0a, 0x15, 0x52, 0x61, 0x74, 0x63, 0x68, 0x65, 0x74, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x55, 0x0a, 0x15, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x73, 0x22, 0x39, 0x0a, 0x05, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x0a, 0x54, 0x78, 0x53, 0x70, 0x65, 0x6e,
	0x74, 0x55, 0x52, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0x30, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x29, 0x0a, 0x05, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x05, 0x72,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x72, 0x61, 0x74, 0x65, 0x52, 0x05, 0x72, 0x61, 0x74, 0x65, 0x73, 0x22, 0xd9, 0x05,
	0x0a, 0x0e, 0x4c, 0x53, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x22, 0x0a, 0x0d, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x73, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x4d, 0x73, 0x61, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x66, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f, 0x68, 0x74, 0x6c, 0x63, 0x5f, 0x6d,
	0x73, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x48, 0x74,
	0x6c, 0x63, 0x4d, 0x73, 0x61, 0x74, 0x12, 0x36, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69, 0x61, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x18, 0x01, 0x52, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x79, 0x72, 0x69, 0x61, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x73, 0x70, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x6c, 0x73, 0x70, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a,
	0x15, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x13, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x18, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x73, 0x61,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x18, 0x01, 0x52, 0x15, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x46, 0x65, 0x65, 0x4d, 0x73,
	0x61, 0x74, 0x12, 0x55, 0x0a, 0x1b, 0x63, 0x68, 0x65, 0x61, 0x70, 0x65, 0x73, 0x74, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x18, 0x63, 0x68, 0x65, 0x61, 0x70, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x46, 0x65, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x5e, 0x0a, 0x20, 0x6c, 0x6f, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x46, 0x65, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x1c, 0x6c, 0x6f, 0x6e,
	0x67, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x46, 0x65, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x10, 0x4f, 0x70,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x6d, 0x69, 0x6e, 0x4d, 0x73, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x22,
	0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x18, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6d, 0x69, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x6d, 0x69, 0x73, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x53, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x07, 0x4c, 0x53, 0x50, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x73, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x53, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x2e,
	0x4c, 0x73, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x73, 0x70, 0x73, 0x1a,
	0x4d, 0x0a, 0x09, 0x4c, 0x73, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x53, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x87,
	0x01, 0x0a, 0x0b, 0x4c, 0x53, 0x50, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x3b,
	0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x53, 0x50, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a, 0x3b, 0x0a, 0x0d, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2a, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x4c, 0x53, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6c, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x73, 0x70, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c,
	0x53, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xe2, 0x01, 0x0a, 0x0d, 0x4c, 0x4e, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x4c, 0x4e, 0x55, 0x72, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x48, 0x00, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x2e, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x4e, 0x55, 0x52, 0x4c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x4c, 0x4e, 0x55, 0x52, 0x4c, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x4c, 0x4e, 0x55, 0x52, 0x4c, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x31, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x31, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7e, 0x0a, 0x0d,
	0x4c, 0x4e, 0x55, 0x72, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x0c,
	0x4c, 0x4e, 0x55, 0x52, 0x4c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x6b, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6b, 0x31, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x6f, 0x0a, 0x09, 0x4c, 0x4e,
	0x55, 0x52, 0x4c, 0x41, 0x75, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x6b, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6b, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x22, 0x52, 0x0a, 0x0d, 0x4c,
	0x4e, 0x55, 0x72, 0x6c, 0x50, 0x61, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22,
	0xa0, 0x01, 0x0a, 0x10, 0x4c, 0x4e, 0x55, 0x72, 0x6c, 0x50, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10,
	0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x4e,
	0x55, 0x72, 0x6c, 0x50, 0x61, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x22, 0xee, 0x02, 0x0a, 0x11, 0x4c, 0x4e, 0x55, 0x52, 0x4c, 0x50, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x4e, 0x55, 0x72,
	0x6c, 0x50, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0d, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x76, 0x22, 0xc6, 0x02, 0x0a, 0x0c, 0x4c, 0x4e, 0x55, 0x72, 0x6c, 0x50,
	0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x4c, 0x4e, 0x55, 0x72, 0x6c, 0x50, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x2b, 0x0a, 0x11, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x42,
	0x0a, 0x10, 0x4c, 0x4e, 0x55, 0x72, 0x6c, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x4e, 0x55, 0x72,
	0x6c, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x63, 0x0a, 0x12, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x77, 0x61,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65,
	0x65, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x65, 0x65, 0x73, 0x48, 0x61, 0x73, 0x68, 0x22, 0xa9, 0x03, 0x0a, 0x0b, 0x52, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x53, 0x77, 0x61, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x63,
	0x6b, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x78,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54,
	0x78, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x0f, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x77,
	0x61, 0x70, 0x46, 0x65, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x22, 0x7d, 0x0a, 0x0f, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53,
	0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x29, 0x0a, 0x04, 0x66,
	0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x77, 0x61, 0x70, 0x46, 0x65, 0x65, 0x73,
	0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x73, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x73, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x9c, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53,
	0x77, 0x61, 0x70, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x59, 0x0a, 0x19, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x17, 0x70, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66,
	0x65, 0x65, 0x22, 0x60, 0x0a, 0x17, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x22, 0x54, 0x0a, 0x18, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53,
	0x77, 0x61, 0x70, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x74, 0x61, 0x22, 0x65, 0x0a, 0x1a, 0x52, 0x65,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x77, 0x61, 0x70, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x53, 0x77, 0x61, 0x70, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x3b, 0x0a, 0x13, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x77, 0x61, 0x70,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0x83,
	0x01, 0x0a, 0x11, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46, 0x65, 0x65, 0x45, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46,
	0x65, 0x65, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x46,
	0x65, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x84, 0x01, 0x0a, 0x18, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x68, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x48, 0x69,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x75,
	0x70, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x5f, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x51, 0x0a, 0x12, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x74,
	0x78, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x65,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x22, 0xdf,
	0x01, 0x0a, 0x19, 0x53, 0x77, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x6d, 0x74, 0x12, 0x55,
	0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x77, 0x65, 0x65,
	0x70, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x59, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x2e, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x22, 0x4f, 0x0a, 0x09, 0x54, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x63, 0x6b,
	0x73, 0x22, 0x66, 0x0a, 0x04, 0x55, 0x74, 0x78, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x76, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6f, 0x75,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x75, 0x6e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x05, 0x75, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x52, 0x05, 0x75, 0x74, 0x78, 0x6f,
	0x73, 0x22, 0x5d, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x53,
	0x77, 0x65, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74,
	0x22, 0xb9, 0x01, 0x0a, 0x17, 0x52, 0x61, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x77, 0x65, 0x65,
	0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x73, 0x67, 0x54, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6d, 0x73, 0x67,
	0x54, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4a, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x77, 0x65, 0x65, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x61, 0x77, 0x53,
	0x6c, 0x6f, 0x74, 0x53, 0x77, 0x65, 0x65, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x78, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x14, 0x53, 0x69, 0x67,
	0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x77, 0x65, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x52, 0x61, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x53, 0x77, 0x65, 0x65, 0x70, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x2a, 0x72, 0x0a, 0x09, 0x53, 0x77, 0x61, 0x70, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x55, 0x4e, 0x44, 0x53, 0x5f, 0x45, 0x58, 0x43, 0x45,
	0x45, 0x44, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x58,
	0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17,
	0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4d,
	0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x57, 0x41,
	0x50, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x04, 0x32, 0x91, 0x04, 0x0a, 0x08,
	0x42, 0x72, 0x65, 0x65, 0x7a, 0x41, 0x50, 0x49, 0x12, 0x33, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4c,
	0x53, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x53,
	0x50, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x4c, 0x53, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x4c, 0x53, 0x50, 0x12, 0x17, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c, 0x53, 0x50, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c, 0x53, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x41, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x18,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x41, 0x64, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3f,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x42,
	0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 85)
var file_messages_proto_goTypes = []interface{}{
	(SwapError)(0),                                // 0: data.SwapError
	(Account_AccountStatus)(0),                    // 1: data.Account.AccountStatus
	(Payment_PaymentType)(0),                      // 2: data.Payment.PaymentType
	(NotificationEvent_NotificationType)(0),       // 3: data.NotificationEvent.NotificationType
	(*ListPaymentsRequest)(nil),                   // 4: data.ListPaymentsRequest
	(*RestartDaemonRequest)(nil),                  // 5: data.RestartDaemonRequest
	(*RestartDaemonReply)(nil),                    // 6: data.RestartDaemonReply
	(*AddFundInitRequest)(nil),                    // 7: data.AddFundInitRequest
	(*FundStatusRequest)(nil),                     // 8: data.FundStatusRequest
	(*AddInvoiceReply)(nil),                       // 9: data.AddInvoiceReply
	(*ChainStatus)(nil),                           // 10: data.ChainStatus
	(*Account)(nil),                               // 11: data.Account
	(*Payment)(nil),                               // 12: data.Payment
	(*PaymentsList)(nil),                          // 13: data.PaymentsList
	(*PaymentResponse)(nil),                       // 14: data.PaymentResponse
	(*SendWalletCoinsRequest)(nil),                // 15: data.SendWalletCoinsRequest
	(*PayInvoiceRequest)(nil),                     // 16: data.PayInvoiceRequest
	(*SpontaneousPaymentRequest)(nil),             // 17: data.SpontaneousPaymentRequest
	(*InvoiceMemo)(nil),                           // 18: data.InvoiceMemo
	(*AddInvoiceRequest)(nil),                     // 19: data.AddInvoiceRequest
	(*Invoice)(nil),                               // 20: data.Invoice
	(*CheckLSPClosedChannelMismatchRequest)(nil),  // 21: data.CheckLSPClosedChannelMismatchRequest
	(*CheckLSPClosedChannelMismatchResponse)(nil), // 22: data.CheckLSPClosedChannelMismatchResponse
	(*ResetClosedChannelChainInfoRequest)(nil),    // 23: data.ResetClosedChannelChainInfoRequest
	(*ResetClosedChannelChainInfoReply)(nil),      // 24: data.ResetClosedChannelChainInfoReply
	(*NotificationEvent)(nil),                     // 25: data.NotificationEvent
	(*AddFundInitReply)(nil),                      // 26: data.AddFundInitReply
	(*AddFundReply)(nil),                          // 27: data.AddFundReply
	(*RefundRequest)(nil),                         // 28: data.RefundRequest
	(*AddFundError)(nil),                          // 29: data.AddFundError
	(*FundStatusReply)(nil),                       // 30: data.FundStatusReply
	(*RemoveFundRequest)(nil),                     // 31: data.RemoveFundRequest
	(*RemoveFundReply)(nil),                       // 32: data.RemoveFundReply
	(*SwapAddressInfo)(nil),                       // 33: data.SwapAddressInfo
	(*SwapAddressList)(nil),                       // 34: data.SwapAddressList
	(*CreateRatchetSessionRequest)(nil),           // 35: data.CreateRatchetSessionRequest
	(*CreateRatchetSessionReply)(nil),             // 36: data.CreateRatchetSessionReply
	(*RatchetSessionInfoReply)(nil),               // 37: data.RatchetSessionInfoReply
	(*RatchetSessionSetInfoRequest)(nil),          // 38: data.RatchetSessionSetInfoRequest
	(*RatchetEncryptRequest)(nil),                 // 39: data.RatchetEncryptRequest
	(*RatchetDecryptRequest)(nil),                 // 40: data.RatchetDecryptRequest
	(*BootstrapFilesRequest)(nil),                 // 41: data.BootstrapFilesRequest
	(*Peers)(nil),                                 // 42: data.Peers
	(*TxSpentURL)(nil),                            // 43: data.TxSpentURL
	(*Rate)(nil),                                  // 44: data.rate
	(*Rates)(nil),                                 // 45: data.Rates
	(*LSPInformation)(nil),                        // 46: data.LSPInformation
	(*OpeningFeeParams)(nil),                      // 47: data.OpeningFeeParams
	(*LSPListRequest)(nil),                        // 48: data.LSPListRequest
	(*LSPList)(nil),                               // 49: data.LSPList
	(*LSPActivity)(nil),                           // 50: data.LSPActivity
	(*ConnectLSPRequest)(nil),                     // 51: data.ConnectLSPRequest
	(*ConnectLSPReply)(nil),                       // 52: data.ConnectLSPReply
	(*LNUrlResponse)(nil),                         // 53: data.LNUrlResponse
	(*LNUrlWithdraw)(nil),                         // 54: data.LNUrlWithdraw
	(*LNURLChannel)(nil),                          // 55: data.LNURLChannel
	(*LNURLAuth)(nil),                             // 56: data.LNURLAuth
	(*LNUrlPayImage)(nil),                         // 57: data.LNUrlPayImage
	(*LNUrlPayMetadata)(nil),                      // 58: data.LNUrlPayMetadata
	(*LNURLPayResponse1)(nil),                     // 59: data.LNURLPayResponse1
	(*SuccessAction)(nil),                         // 60: data.SuccessAction
	(*LNUrlPayInfo)(nil),                          // 61: data.LNUrlPayInfo
	(*LNUrlPayInfoList)(nil),                      // 62: data.LNUrlPayInfoList
	(*ReverseSwapRequest)(nil),                    // 63: data.ReverseSwapRequest
	(*ReverseSwap)(nil),                           // 64: data.ReverseSwap
	(*ReverseSwapFees)(nil),                       // 65: data.ReverseSwapFees
	(*ReverseSwapInfo)(nil),                       // 66: data.ReverseSwapInfo
	(*ReverseSwapPaymentRequest)(nil),             // 67: data.ReverseSwapPaymentRequest
	(*PushNotificationDetails)(nil),               // 68: data.PushNotificationDetails
	(*ReverseSwapPaymentStatus)(nil),              // 69: data.ReverseSwapPaymentStatus
	(*ReverseSwapPaymentStatuses)(nil),            // 70: data.ReverseSwapPaymentStatuses
	(*ReverseSwapClaimFee)(nil),                   // 71: data.ReverseSwapClaimFee
	(*ClaimFeeEstimates)(nil),                     // 72: data.ClaimFeeEstimates
	(*UnspendLockupInformation)(nil),              // 73: data.UnspendLockupInformation
	(*TransactionDetails)(nil),                    // 74: data.TransactionDetails
	(*SweepAllCoinsTransactions)(nil),             // 75: data.SweepAllCoinsTransactions
	(*DownloadBackupResponse)(nil),                // 76: data.DownloadBackupResponse
	(*TorConfig)(nil),                             // 77: data.TorConfig
	(*Utxo)(nil),                                  // 78: data.Utxo
	(*AddressInfo)(nil),                           // 79: data.AddressInfo
	(*CreateSlotSweepRequest)(nil),                // 80: data.CreateSlotSweepRequest
	(*RawSlotSweepTransaction)(nil),               // 81: data.RawSlotSweepTransaction
	(*CreateSlotSweepResponse)(nil),               // 82: data.CreateSlotSweepResponse
	(*SignSlotSweepRequest)(nil),                  // 83: data.SignSlotSweepRequest
	nil,                                           // 84: data.SpontaneousPaymentRequest.TlvEntry
	nil,                                           // 85: data.LSPList.LspsEntry
	nil,                                           // 86: data.LSPActivity.ActivityEntry
	nil,                                           // 87: data.ClaimFeeEstimates.FeesEntry
	nil,                                           // 88: data.SweepAllCoinsTransactions.TransactionsEntry
}
var file_messages_proto_depIdxs = []int32{
	47, // 0: data.AddFundInitRequest.opening_fee_params:type_name -> data.OpeningFeeParams
	1,  // 1: data.Account.status:type_name -> data.Account.AccountStatus
	2,  // 2: data.Payment.type:type_name -> data.Payment.PaymentType
	18, // 3: data.Payment.invoiceMemo:type_name -> data.InvoiceMemo
	61, // 4: data.Payment.lnurlPayInfo:type_name -> data.LNUrlPayInfo
	12, // 5: data.PaymentsList.paymentsList:type_name -> data.Payment
	84, // 6: data.SpontaneousPaymentRequest.tlv:type_name -> data.SpontaneousPaymentRequest.TlvEntry
	18, // 7: data.AddInvoiceRequest.invoiceDetails:type_name -> data.InvoiceMemo
	46, // 8: data.AddInvoiceRequest.lspInfo:type_name -> data.LSPInformation
	47, // 9: data.AddInvoiceRequest.opening_fee_params:type_name -> data.OpeningFeeParams
	18, // 10: data.Invoice.memo:type_name -> data.InvoiceMemo
	46, // 11: data.CheckLSPClosedChannelMismatchRequest.lspInfo:type_name -> data.LSPInformation
	3,  // 12: data.NotificationEvent.type:type_name -> data.NotificationEvent.NotificationType
	33, // 13: data.AddFundError.swapAddressInfo:type_name -> data.SwapAddressInfo
	33, // 14: data.FundStatusReply.unConfirmedAddresses:type_name -> data.SwapAddressInfo
	33, // 15: data.FundStatusReply.confirmedAddresses:type_name -> data.SwapAddressInfo
	33, // 16: data.FundStatusReply.refundableAddresses:type_name -> data.SwapAddressInfo
	0,  // 17: data.SwapAddressInfo.swapError:type_name -> data.SwapError
	33, // 18: data.SwapAddressList.addresses:type_name -> data.SwapAddressInfo
	44, // 19: data.Rates.rates:type_name -> data.rate
	47, // 20: data.LSPInformation.cheapest_opening_fee_params:type_name -> data.OpeningFeeParams
	47, // 21: data.LSPInformation.longest_valid_opening_fee_params:type_name -> data.OpeningFeeParams
	85, // 22: data.LSPList.lsps:type_name -> data.LSPList.LspsEntry
	86, // 23: data.LSPActivity.activity:type_name -> data.LSPActivity.ActivityEntry
	54, // 24: data.LNUrlResponse.withdraw:type_name -> data.LNUrlWithdraw
	55, // 25: data.LNUrlResponse.channel:type_name -> data.LNURLChannel
	56, // 26: data.LNUrlResponse.auth:type_name -> data.LNURLAuth
	59, // 27: data.LNUrlResponse.payResponse1:type_name -> data.LNURLPayResponse1
	57, // 28: data.LNUrlPayMetadata.image:type_name -> data.LNUrlPayImage
	58, // 29: data.LNURLPayResponse1.metadata:type_name -> data.LNUrlPayMetadata
	60, // 30: data.LNUrlPayInfo.success_action:type_name -> data.SuccessAction
	58, // 31: data.LNUrlPayInfo.metadata:type_name -> data.LNUrlPayMetadata
	61, // 32: data.LNUrlPayInfoList.infoList:type_name -> data.LNUrlPayInfo
	65, // 33: data.ReverseSwapInfo.fees:type_name -> data.ReverseSwapFees
	68, // 34: data.ReverseSwapPaymentRequest.push_notification_details:type_name -> data.PushNotificationDetails
	69, // 35: data.ReverseSwapPaymentStatuses.payments_status:type_name -> data.ReverseSwapPaymentStatus
	87, // 36: data.ClaimFeeEstimates.fees:type_name -> data.ClaimFeeEstimates.FeesEntry
	88, // 37: data.SweepAllCoinsTransactions.transactions:type_name -> data.SweepAllCoinsTransactions.TransactionsEntry
	78, // 38: data.AddressInfo.utxos:type_name -> data.Utxo
	79, // 39: data.CreateSlotSweepRequest.slot:type_name -> data.AddressInfo
	81, // 40: data.CreateSlotSweepResponse.txs:type_name -> data.RawSlotSweepTransaction
	79, // 41: data.SignSlotSweepRequest.addressInfo:type_name -> data.AddressInfo
	81, // 42: data.SignSlotSweepRequest.transaction:type_name -> data.RawSlotSweepTransaction
	46, // 43: data.LSPList.LspsEntry.value:type_name -> data.LSPInformation
	74, // 44: data.SweepAllCoinsTransactions.TransactionsEntry.value:type_name -> data.TransactionDetails
	48, // 45: data.BreezAPI.GetLSPList:input_type -> data.LSPListRequest
	51, // 46: data.BreezAPI.ConnectToLSP:input_type -> data.ConnectLSPRequest
	7,  // 47: data.BreezAPI.AddFundInit:input_type -> data.AddFundInitRequest
	8,  // 48: data.BreezAPI.GetFundStatus:input_type -> data.FundStatusRequest
	19, // 49: data.BreezAPI.AddInvoice:input_type -> data.AddInvoiceRequest
	16, // 50: data.BreezAPI.PayInvoice:input_type -> data.PayInvoiceRequest
	5,  // 51: data.BreezAPI.RestartDaemon:input_type -> data.RestartDaemonRequest
	4,  // 52: data.BreezAPI.ListPayments:input_type -> data.ListPaymentsRequest
	49, // 53: data.BreezAPI.GetLSPList:output_type -> data.LSPList
	52, // 54: data.BreezAPI.ConnectToLSP:output_type -> data.ConnectLSPReply
	26, // 55: data.BreezAPI.AddFundInit:output_type -> data.AddFundInitReply
	30, // 56: data.BreezAPI.GetFundStatus:output_type -> data.FundStatusReply
	9,  // 57: data.BreezAPI.AddInvoice:output_type -> data.AddInvoiceReply
	14, // 58: data.BreezAPI.PayInvoice:output_type -> data.PaymentResponse
	6,  // 59: data.BreezAPI.RestartDaemon:output_type -> data.RestartDaemonReply
	13, // 60: data.BreezAPI.ListPayments:output_type -> data.PaymentsList
	53, // [53:61] is the sub-list for method output_type
	45, // [45:53] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPaymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartDaemonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartDaemonReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFundInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInvoiceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendWalletCoinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpontaneousPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceMemo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLSPClosedChannelMismatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLSPClosedChannelMismatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetClosedChannelChainInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetClosedChannelChainInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFundInitReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFundReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFundError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFundReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapAddressInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapAddressList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRatchetSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRatchetSessionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatchetSessionInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatchetSessionSetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatchetEncryptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatchetDecryptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BootstrapFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxSpentURL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LSPInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpeningFeeParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LSPListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LSPList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LSPActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectLSPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectLSPReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LNUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LNUrlWithdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LNURLChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LNURLAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LNUrlPayImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LNUrlPayMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LNURLPayResponse1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LNUrlPayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LNUrlPayInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReverseSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReverseSwap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReverseSwapFees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReverseSwapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReverseSwapPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushNotificationDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReverseSwapPaymentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReverseSwapPaymentStatuses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReverseSwapClaimFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimFeeEstimates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnspendLockupInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SweepAllCoinsTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadBackupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Utxo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSlotSweepRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawSlotSweepTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSlotSweepResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignSlotSweepRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_proto_msgTypes[49].OneofWrappers = []interface{}{
		(*LNUrlResponse_Withdraw)(nil),
		(*LNUrlResponse_Channel)(nil),
		(*LNUrlResponse_Auth)(nil),
		(*LNUrlResponse_PayResponse1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   85,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
